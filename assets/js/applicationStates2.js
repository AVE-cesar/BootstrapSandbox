//
// Source code generated by Celerio, a Jaxio product.
// Documentation: http://www.jaxio.com/documentation/celerio/
// Follow us on twitter: @jaxiosoft
// Need commercial support ? Contact us: info@jaxio.com
// Template pack-custom:angularjs/assets/js/applicationStates.p.vm.js
//



app.config(function($stateProvider, $urlRouterProvider) {
	//
	// For any unmatched url, redirect to /dashboard
	$urlRouterProvider.otherwise("/dashboard");
	//
  
  
  $stateProvider
		.state('inlusr', {
	    	url: "/inlusr",
	    	views: {
	    		"mainView": {
	    			templateUrl: "assets/tpl/apps/inlUsr/inlUsr.html", 
	    			controller: "InlUsrController"
	    			},
	    		"footerView": {templateUrl: "tpl/footer.html"}
			}
	});
	/*		  
  $stateProvider
		.state('editInlUsr', {
			url: "/inlusr/{id}",
	    	templateUrl: "assets/tpl/apps/inlUsr/inlUsrEdit.html",
			controller: "InlUsrEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'InlUsrRestService', '$log', function($stateParams, InlUsrRestService, log) {
					return InlUsrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});*/
  $stateProvider
		.state('editInlUsr', {
			url: "/inlusr/{id}",
			views: {
				"mainView": {
	    			templateUrl: "assets/tpl/apps/inlUsr/inlUsrEdit.html", 
	    			controller: "InlUsrEditController"
	    			},
	    		"footerView": {templateUrl: "tpl/footer.html"}
			},
	    	/*templateUrl: "assets/tpl/apps/inlUsr/inlUsrEdit.html",*/
			/*controller: "InlUsrEditController",*/
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'InlUsrRestService', '$log', function($stateParams, InlUsrRestService, log) {
					return InlUsrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
  
  $stateProvider
		.state('home', {
            url: "/",
            views: {
				"mainView": {templateUrl: "tpl/home.html"},
				"footerView": {templateUrl: "tpl/footer.html"}
				}
            })
		.state('book', {
            url: "/book",
            views: {
				"mainView": {templateUrl: "tpl/test.html"},
				"footerView": {templateUrl: "tpl/footer.html"}
				}
            })
		.state('form', {
            url: "/form",
            views: {
				"mainView": {templateUrl: "tpl/form.html"},
				"footerView": {templateUrl: "tpl/footer.html"}
				}
            })
		.state('table', {
            url: "/table",
            views: {
            	"searchView": {templateUrl: "tpl/search.html"},
				"mainView": {templateUrl: "tpl/table.html"},
				"footerView": {templateUrl: "tpl/emptyFooter.html"}
				}
            })
        .state('testAlert', {
            url: "/testAlert",
            views: {
				"mainView": {
					templateUrl: "tpl/testAlert.html",
					controller: "TestAlertController"},
				"footerView": {templateUrl: "tpl/emptyFooter.html"}
				}
            })
        .state('testAside', {
            url: "/testAside",
            views: {
				"mainView": {
					templateUrl: "tpl/testAside.html",
					controller: "TestAsideController"
				},
				"footerView": {templateUrl: "tpl/emptyFooter.html"}
				}
            });
  
	// Now set up the states
	$stateProvider
    	.state('dashboard', {
      		url: "/dashboard",
      		templateUrl: "assets/tpl/dashboard.html"
	});
	
	$stateProvider
    	.state('settings', {
      		url: "/settings",
      		templateUrl: "assets/tpl/settings.html"
    });
    
    $stateProvider
    	.state('logout', {
      		url: "/logout",
      		templateUrl: "assets/tpl/logout.html"
    });	
    
    $stateProvider
    	.state('logLevels', {
      		url: "/logLevels",
      		templateUrl: "assets/tpl/logLevels.html",
      		controller: "LogsController"
    });
    
    $stateProvider
    	.state('translation', {
      		url: "/translation",
      		templateUrl: "assets/tpl/apps/admin/translation.html",
      		controller: "TranslationController"
    });		
    	
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('alert', {
	    	url: "/alert",
	    	templateUrl: "assets/tpl/apps/alert/alert.html",
			controller: "AlertController"
	});		  
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('alertlogdetail', {
	    	url: "/alertlogdetail",
	    	templateUrl: "assets/tpl/apps/alertLogDetail/alertLogDetail.html",
			controller: "AlertLogDetailController"
	});		  
					
									
									
									
									
									
						
					$stateProvider
		.state('alertmsg', {
	    	url: "/alertmsg",
	    	templateUrl: "assets/tpl/apps/alertMsg/alertMsg.html",
			controller: "AlertMsgController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('alertmsgmail', {
	    	url: "/alertmsgmail",
	    	templateUrl: "assets/tpl/apps/alertMsgMail/alertMsgMail.html",
			controller: "AlertMsgMailController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('alertrpt', {
	    	url: "/alertrpt",
	    	templateUrl: "assets/tpl/apps/alertRpt/alertRpt.html",
			controller: "AlertRptController"
	});		  
					
									
									
									
									
									
									
						
					$stateProvider
		.state('attachments', {
	    	url: "/attachments",
	    	templateUrl: "assets/tpl/apps/attachments/attachments.html",
			controller: "AttachmentsController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('chl', {
	    	url: "/chl",
	    	templateUrl: "assets/tpl/apps/chl/chl.html",
			controller: "ChlController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('codes', {
	    	url: "/codes",
	    	templateUrl: "assets/tpl/apps/codes/codes.html",
			controller: "CodesController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('dfulog', {
	    	url: "/dfulog",
	    	templateUrl: "assets/tpl/apps/dfuLog/dfuLog.html",
			controller: "DfuLogController"
	});		  
					
									
									
						
					$stateProvider
		.state('diffusionlist', {
	    	url: "/diffusionlist",
	    	templateUrl: "assets/tpl/apps/diffusionList/diffusionList.html",
			controller: "DiffusionListController"
	});		  
					
									
									
									
									
									
									
						
					$stateProvider
		.state('diffusionlistaud', {
	    	url: "/diffusionlistaud",
	    	templateUrl: "assets/tpl/apps/diffusionListAud/diffusionListAud.html",
			controller: "DiffusionListAudController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('diffusionlistpar', {
	    	url: "/diffusionlistpar",
	    	templateUrl: "assets/tpl/apps/diffusionListPar/diffusionListPar.html",
			controller: "DiffusionListParController"
	});		  
					
									
									
									
									
									
									
									
						
					$stateProvider
		.state('diffusionlistparaud', {
	    	url: "/diffusionlistparaud",
	    	templateUrl: "assets/tpl/apps/diffusionListParAud/diffusionListParAud.html",
			controller: "DiffusionListParAudController"
	});		  
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('diffusionmessage', {
	    	url: "/diffusionmessage",
	    	templateUrl: "assets/tpl/apps/diffusionMessage/diffusionMessage.html",
			controller: "DiffusionMessageController"
	});		  
					
									
									
									
									
									
									
									
						
					$stateProvider
		.state('edmchl', {
	    	url: "/edmchl",
	    	templateUrl: "assets/tpl/apps/edmChl/edmChl.html",
			controller: "EdmChlController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('edmexelog', {
	    	url: "/edmexelog",
	    	templateUrl: "assets/tpl/apps/edmExeLog/edmExeLog.html",
			controller: "EdmExeLogController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('edmjobreqlog', {
	    	url: "/edmjobreqlog",
	    	templateUrl: "assets/tpl/apps/edmJobReqLog/edmJobReqLog.html",
			controller: "EdmJobReqLogController"
	});		  
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('edmsecurity', {
	    	url: "/edmsecurity",
	    	templateUrl: "assets/tpl/apps/edmSecurity/edmSecurity.html",
			controller: "EdmSecurityController"
	});		  
					
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('edmsvr', {
	    	url: "/edmsvr",
	    	templateUrl: "assets/tpl/apps/edmSvr/edmSvr.html",
			controller: "EdmSvrController"
	});		  
					
									
									
						
					$stateProvider
		.state('err', {
	    	url: "/err",
	    	templateUrl: "assets/tpl/apps/err/err.html",
			controller: "ErrController"
	});		  
					
									
									
									
									
									
						
					$stateProvider
		.state('errocc', {
	    	url: "/errocc",
	    	templateUrl: "assets/tpl/apps/errOcc/errOcc.html",
			controller: "ErrOccController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('erroccdfusta', {
	    	url: "/erroccdfusta",
	    	templateUrl: "assets/tpl/apps/errOccDfuSta/errOccDfuSta.html",
			controller: "ErrOccDfuStaController"
	});		  
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('errtrg', {
	    	url: "/errtrg",
	    	templateUrl: "assets/tpl/apps/errTrg/errTrg.html",
			controller: "ErrTrgController"
	});		  
					
									
									
						
					$stateProvider
		.state('faxadd', {
	    	url: "/faxadd",
	    	templateUrl: "assets/tpl/apps/faxAdd/faxAdd.html",
			controller: "FaxAddController"
	});		  
					
									
									
									
									
									
						
					$stateProvider
		.state('faxchl', {
	    	url: "/faxchl",
	    	templateUrl: "assets/tpl/apps/faxChl/faxChl.html",
			controller: "FaxChlController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('fie', {
	    	url: "/fie",
	    	templateUrl: "assets/tpl/apps/fie/fie.html",
			controller: "FieController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('fielnk', {
	    	url: "/fielnk",
	    	templateUrl: "assets/tpl/apps/fieLnk/fieLnk.html",
			controller: "FieLnkController"
	});		  
					
									
									
						
					$stateProvider
		.state('fiepar', {
	    	url: "/fiepar",
	    	templateUrl: "assets/tpl/apps/fiePar/fiePar.html",
			controller: "FieParController"
	});		  
					
									
						
					$stateProvider
		.state('filedocuments', {
	    	url: "/filedocuments",
	    	templateUrl: "assets/tpl/apps/fileDocuments/fileDocuments.html",
			controller: "FileDocumentsController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('ftpchl', {
	    	url: "/ftpchl",
	    	templateUrl: "assets/tpl/apps/ftpChl/ftpChl.html",
			controller: "FtpChlController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('fulmqrptreq', {
	    	url: "/fulmqrptreq",
	    	templateUrl: "assets/tpl/apps/fulMqRptReq/fulMqRptReq.html",
			controller: "FulMqRptReqController"
	});		  
													
																	
									
									
						
							$stateProvider
		.state('glopar', {
	    	url: "/glopar",
	    	templateUrl: "assets/tpl/apps/gloPar/gloPar.html",
			controller: "GloParController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('inforoute', {
	    	url: "/inforoute",
	    	templateUrl: "assets/tpl/apps/infoRoute/infoRoute.html",
			controller: "InfoRouteController"
	});		  
					
									
						
					$stateProvider
		.state('inlgrp', {
	    	url: "/inlgrp",
	    	templateUrl: "assets/tpl/apps/inlGrp/inlGrp.html",
			controller: "InlGrpController"
	});		  
					
									
									
						
					
													
																	
						
							$stateProvider
		.state('inlusrgrplnk', {
	    	url: "/inlusrgrplnk",
	    	templateUrl: "assets/tpl/apps/inlUsrGrpLnk/inlUsrGrpLnk.html",
			controller: "InlUsrGrpLnkController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('job', {
	    	url: "/job",
	    	templateUrl: "assets/tpl/apps/job/job.html",
			controller: "JobController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('jobpar', {
	    	url: "/jobpar",
	    	templateUrl: "assets/tpl/apps/jobPar/jobPar.html",
			controller: "JobParController"
	});		  
					
									
									
						
					$stateProvider
		.state('jobparval', {
	    	url: "/jobparval",
	    	templateUrl: "assets/tpl/apps/jobParVal/jobParVal.html",
			controller: "JobParValController"
	});		  
					
									
									
						
					$stateProvider
		.state('logmaldfulst', {
	    	url: "/logmaldfulst",
	    	templateUrl: "assets/tpl/apps/logMalDfuLst/logMalDfuLst.html",
			controller: "LogMalDfuLstController"
	});		  
					
									
									
						
					$stateProvider
		.state('logmalerrcde', {
	    	url: "/logmalerrcde",
	    	templateUrl: "assets/tpl/apps/logMalErrCde/logMalErrCde.html",
			controller: "LogMalErrCdeController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('logpar', {
	    	url: "/logpar",
	    	templateUrl: "assets/tpl/apps/logPar/logPar.html",
			controller: "LogParController"
	});		  
					
									
									
									
									
						
					$stateProvider
		.state('logtivmap', {
	    	url: "/logtivmap",
	    	templateUrl: "assets/tpl/apps/logTivMap/logTivMap.html",
			controller: "LogTivMapController"
	});		  
					
									
									
						
					$stateProvider
		.state('maladd', {
	    	url: "/maladd",
	    	templateUrl: "assets/tpl/apps/malAdd/malAdd.html",
			controller: "MalAddController"
	});		  
					
									
									
									
									
						
					$stateProvider
		.state('malchl', {
	    	url: "/malchl",
	    	templateUrl: "assets/tpl/apps/malChl/malChl.html",
			controller: "MalChlController"
	});		  
					
									
									
									
									
									
						
					$stateProvider
		.state('malsvr', {
	    	url: "/malsvr",
	    	templateUrl: "assets/tpl/apps/malSvr/malSvr.html",
			controller: "MalSvrController"
	});		  
					
									
						
					$stateProvider
		.state('parcat', {
	    	url: "/parcat",
	    	templateUrl: "assets/tpl/apps/parCat/parCat.html",
			controller: "ParCatController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('plantable', {
	    	url: "/plantable",
	    	templateUrl: "assets/tpl/apps/planTable/planTable.html",
			controller: "PlanTableController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('recipients', {
	    	url: "/recipients",
	    	templateUrl: "assets/tpl/apps/recipients/recipients.html",
			controller: "RecipientsController"
	});		  
					
									
									
									
									
									
						
					$stateProvider
		.state('rpt', {
	    	url: "/rpt",
	    	templateUrl: "assets/tpl/apps/rpt/rpt.html",
			controller: "RptController"
	});		  
					
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('rptspnlnk', {
	    	url: "/rptspnlnk",
	    	templateUrl: "assets/tpl/apps/rptSpnLnk/rptSpnLnk.html",
			controller: "RptSpnLnkController"
	});		  
					
									
									
									
									
									
									
									
						
					$stateProvider
		.state('scdjob', {
	    	url: "/scdjob",
	    	templateUrl: "assets/tpl/apps/scdJob/scdJob.html",
			controller: "ScdJobController"
	});		  
					
									
									
									
									
									
									
						
					$stateProvider
		.state('scdjoblog', {
	    	url: "/scdjoblog",
	    	templateUrl: "assets/tpl/apps/scdJobLog/scdJobLog.html",
			controller: "ScdJobLogController"
	});		  
													
																	
									
						
							$stateProvider
		.state('scdjoblogpar', {
	    	url: "/scdjoblogpar",
	    	templateUrl: "assets/tpl/apps/scdJobLogPar/scdJobLogPar.html",
			controller: "ScdJobLogParController"
	});		  
													
																	
									
						
							$stateProvider
		.state('scdjobpar', {
	    	url: "/scdjobpar",
	    	templateUrl: "assets/tpl/apps/scdJobPar/scdJobPar.html",
			controller: "ScdJobParController"
	});		  
													
																	
									
						
							$stateProvider
		.state('scdtrgpar', {
	    	url: "/scdtrgpar",
	    	templateUrl: "assets/tpl/apps/scdTrgPar/scdTrgPar.html",
			controller: "ScdTrgParController"
	});		  
					
									
									
									
									
									
									
						
					$stateProvider
		.state('scr', {
	    	url: "/scr",
	    	templateUrl: "assets/tpl/apps/scr/scr.html",
			controller: "ScrController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('seqnme', {
	    	url: "/seqnme",
	    	templateUrl: "assets/tpl/apps/seqNme/seqNme.html",
			controller: "SeqNmeController"
	});		  
					
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('spn', {
	    	url: "/spn",
	    	templateUrl: "assets/tpl/apps/spn/spn.html",
			controller: "SpnController"
	});		  
													
																	
																	
									
						
							$stateProvider
		.state('stdfienbr', {
	    	url: "/stdfienbr",
	    	templateUrl: "assets/tpl/apps/stdFieNbr/stdFieNbr.html",
			controller: "StdFieNbrController"
	});		  
					
									
									
									
						
					$stateProvider
		.state('swiftarchiver', {
	    	url: "/swiftarchiver",
	    	templateUrl: "assets/tpl/apps/swiftArchiver/swiftArchiver.html",
			controller: "SwiftArchiverController"
	});		  
					
									
									
									
									
						
					$stateProvider
		.state('tmpmsgrpy', {
	    	url: "/tmpmsgrpy",
	    	templateUrl: "assets/tpl/apps/tmpMsgRpy/tmpMsgRpy.html",
			controller: "TmpMsgRpyController"
	});		  
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('topcal', {
	    	url: "/topcal",
	    	templateUrl: "assets/tpl/apps/topCal/topCal.html",
			controller: "TopCalController"
	});		  
					
									
									
						
					$stateProvider
		.state('trfpar', {
	    	url: "/trfpar",
	    	templateUrl: "assets/tpl/apps/trfPar/trfPar.html",
			controller: "TrfParController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('uploads', {
	    	url: "/uploads",
	    	templateUrl: "assets/tpl/apps/uploads/uploads.html",
			controller: "UploadsController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsdiffusion', {
	    	url: "/vbsdiffusion",
	    	templateUrl: "assets/tpl/apps/vbsDiffusion/vbsDiffusion.html",
			controller: "VbsDiffusionController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsdiffusionavant2015', {
	    	url: "/vbsdiffusionavant2015",
	    	templateUrl: "assets/tpl/apps/vbsDiffusionAvant2015/vbsDiffusionAvant2015.html",
			controller: "VbsDiffusionAvant2015Controller"
	});		  
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsflow', {
	    	url: "/vbsflow",
	    	templateUrl: "assets/tpl/apps/vbsFlow/vbsFlow.html",
			controller: "VbsFlowController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsflowavant2015', {
	    	url: "/vbsflowavant2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowAvant2015/vbsFlowAvant2015.html",
			controller: "VbsFlowAvant2015Controller"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsflowunit', {
	    	url: "/vbsflowunit",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnit/vbsFlowUnit.html",
			controller: "VbsFlowUnitController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsflowunitavant2015', {
	    	url: "/vbsflowunitavant2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitAvant2015/vbsFlowUnitAvant2015.html",
			controller: "VbsFlowUnitAvant2015Controller"
	});		  
					
									
									
						
					$stateProvider
		.state('vbsflowunitdiffusion', {
	    	url: "/vbsflowunitdiffusion",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusion/vbsFlowUnitDiffusion.html",
			controller: "VbsFlowUnitDiffusionController"
	});		  
					
									
									
						
					$stateProvider
		.state('vbsflowunitdiffusiona2015', {
	    	url: "/vbsflowunitdiffusiona2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusionA2015/vbsFlowUnitDiffusionA2015.html",
			controller: "VbsFlowUnitDiffusionA2015Controller"
	});		  
					
									
									
						
					$stateProvider
		.state('vbsflowunitmedia', {
	    	url: "/vbsflowunitmedia",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMedia/vbsFlowUnitMedia.html",
			controller: "VbsFlowUnitMediaController"
	});		  
					
									
									
						
					$stateProvider
		.state('vbsflowunitmediaavant2015', {
	    	url: "/vbsflowunitmediaavant2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMediaAvant2015/vbsFlowUnitMediaAvant2015.html",
			controller: "VbsFlowUnitMediaAvant2015Controller"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsflowunitsubfnd', {
	    	url: "/vbsflowunitsubfnd",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFnd/vbsFlowUnitSubFnd.html",
			controller: "VbsFlowUnitSubFndController"
	});		  
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsflowunitsubfnda2015', {
	    	url: "/vbsflowunitsubfnda2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFndA2015/vbsFlowUnitSubFndA2015.html",
			controller: "VbsFlowUnitSubFndA2015Controller"
	});		  
					
									
									
						
					$stateProvider
		.state('vbsflowunittrans', {
	    	url: "/vbsflowunittrans",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTrans/vbsFlowUnitTrans.html",
			controller: "VbsFlowUnitTransController"
	});		  
					
									
									
						
					$stateProvider
		.state('vbsflowunittransavant2015', {
	    	url: "/vbsflowunittransavant2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTransAvant2015/vbsFlowUnitTransAvant2015.html",
			controller: "VbsFlowUnitTransAvant2015Controller"
	});		  
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsstatus', {
	    	url: "/vbsstatus",
	    	templateUrl: "assets/tpl/apps/vbsStatus/vbsStatus.html",
			controller: "VbsStatusController"
	});		  
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('vbsstatusavant2015', {
	    	url: "/vbsstatusavant2015",
	    	templateUrl: "assets/tpl/apps/vbsStatusAvant2015/vbsStatusAvant2015.html",
			controller: "VbsStatusAvant2015Controller"
	});		  
													
																	
									
						
							$stateProvider
		.state('wrkspndfu', {
	    	url: "/wrkspndfu",
	    	templateUrl: "assets/tpl/apps/wrkSpnDfu/wrkSpnDfu.html",
			controller: "WrkSpnDfuController"
	});		  
													
																	
																	
						
							$stateProvider
		.state('wrkspnful', {
	    	url: "/wrkspnful",
	    	templateUrl: "assets/tpl/apps/wrkSpnFul/wrkSpnFul.html",
			controller: "WrkSpnFulController"
	});		  
					
									
						
					$stateProvider
		.state('xdppar', {
	    	url: "/xdppar",
	    	templateUrl: "assets/tpl/apps/xdpPar/xdpPar.html",
			controller: "XdpParController"
	});		  

					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editAlert', {
			url: "/alert/{id}",
	    	templateUrl: "assets/tpl/apps/alert/alertEdit.html",
			controller: "AlertEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'AlertRestService', '$log', function($stateParams, AlertRestService, log) {
					return AlertRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editAlertLogDetail', {
			url: "/alertlogdetail/{id}",
	    	templateUrl: "assets/tpl/apps/alertLogDetail/alertLogDetailEdit.html",
			controller: "AlertLogDetailEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'AlertLogDetailRestService', '$log', function($stateParams, AlertLogDetailRestService, log) {
					return AlertLogDetailRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('editAlertMsg', {
			url: "/alertmsg/{id}",
	    	templateUrl: "assets/tpl/apps/alertMsg/alertMsgEdit.html",
			controller: "AlertMsgEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'AlertMsgRestService', '$log', function($stateParams, AlertMsgRestService, log) {
					return AlertMsgRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editAlertMsgMail', {
			url: "/alertmsgmail/{id}",
	    	templateUrl: "assets/tpl/apps/alertMsgMail/alertMsgMailEdit.html",
			controller: "AlertMsgMailEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'AlertMsgMailRestService', '$log', function($stateParams, AlertMsgMailRestService, log) {
					return AlertMsgMailRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editAlertRpt', {
			url: "/alertrpt/{id}",
	    	templateUrl: "assets/tpl/apps/alertRpt/alertRptEdit.html",
			controller: "AlertRptEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'AlertRptRestService', '$log', function($stateParams, AlertRptRestService, log) {
					return AlertRptRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
						
					$stateProvider
		.state('editAttachments', {
			url: "/attachments/{id}",
	    	templateUrl: "assets/tpl/apps/attachments/attachmentsEdit.html",
			controller: "AttachmentsEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'AttachmentsRestService', '$log', function($stateParams, AttachmentsRestService, log) {
					return AttachmentsRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editChl', {
			url: "/chl/{id}",
	    	templateUrl: "assets/tpl/apps/chl/chlEdit.html",
			controller: "ChlEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ChlRestService', '$log', function($stateParams, ChlRestService, log) {
					return ChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editCodes', {
			url: "/codes/{id}",
	    	templateUrl: "assets/tpl/apps/codes/codesEdit.html",
			controller: "CodesEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'CodesRestService', '$log', function($stateParams, CodesRestService, log) {
					return CodesRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editDfuLog', {
			url: "/dfulog/{id}",
	    	templateUrl: "assets/tpl/apps/dfuLog/dfuLogEdit.html",
			controller: "DfuLogEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'DfuLogRestService', '$log', function($stateParams, DfuLogRestService, log) {
					return DfuLogRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editDiffusionList', {
			url: "/diffusionlist/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionList/diffusionListEdit.html",
			controller: "DiffusionListEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'DiffusionListRestService', '$log', function($stateParams, DiffusionListRestService, log) {
					return DiffusionListRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
						
					$stateProvider
		.state('editDiffusionListAud', {
			url: "/diffusionlistaud/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionListAud/diffusionListAudEdit.html",
			controller: "DiffusionListAudEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'DiffusionListAudRestService', '$log', function($stateParams, DiffusionListAudRestService, log) {
					return DiffusionListAudRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editDiffusionListPar', {
			url: "/diffusionlistpar/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionListPar/diffusionListParEdit.html",
			controller: "DiffusionListParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'DiffusionListParRestService', '$log', function($stateParams, DiffusionListParRestService, log) {
					return DiffusionListParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editDiffusionListParAud', {
			url: "/diffusionlistparaud/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionListParAud/diffusionListParAudEdit.html",
			controller: "DiffusionListParAudEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'DiffusionListParAudRestService', '$log', function($stateParams, DiffusionListParAudRestService, log) {
					return DiffusionListParAudRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editDiffusionMessage', {
			url: "/diffusionmessage/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionMessage/diffusionMessageEdit.html",
			controller: "DiffusionMessageEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'DiffusionMessageRestService', '$log', function($stateParams, DiffusionMessageRestService, log) {
					return DiffusionMessageRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editEdmChl', {
			url: "/edmchl/{id}",
	    	templateUrl: "assets/tpl/apps/edmChl/edmChlEdit.html",
			controller: "EdmChlEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'EdmChlRestService', '$log', function($stateParams, EdmChlRestService, log) {
					return EdmChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editEdmExeLog', {
			url: "/edmexelog/{id}",
	    	templateUrl: "assets/tpl/apps/edmExeLog/edmExeLogEdit.html",
			controller: "EdmExeLogEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'EdmExeLogRestService', '$log', function($stateParams, EdmExeLogRestService, log) {
					return EdmExeLogRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editEdmJobReqLog', {
			url: "/edmjobreqlog/{id}",
	    	templateUrl: "assets/tpl/apps/edmJobReqLog/edmJobReqLogEdit.html",
			controller: "EdmJobReqLogEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'EdmJobReqLogRestService', '$log', function($stateParams, EdmJobReqLogRestService, log) {
					return EdmJobReqLogRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editEdmSecurity', {
			url: "/edmsecurity/{id}",
	    	templateUrl: "assets/tpl/apps/edmSecurity/edmSecurityEdit.html",
			controller: "EdmSecurityEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'EdmSecurityRestService', '$log', function($stateParams, EdmSecurityRestService, log) {
					return EdmSecurityRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editEdmSvr', {
			url: "/edmsvr/{id}",
	    	templateUrl: "assets/tpl/apps/edmSvr/edmSvrEdit.html",
			controller: "EdmSvrEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'EdmSvrRestService', '$log', function($stateParams, EdmSvrRestService, log) {
					return EdmSvrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editErr', {
			url: "/err/{id}",
	    	templateUrl: "assets/tpl/apps/err/errEdit.html",
			controller: "ErrEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ErrRestService', '$log', function($stateParams, ErrRestService, log) {
					return ErrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('editErrOcc', {
			url: "/errocc/{id}",
	    	templateUrl: "assets/tpl/apps/errOcc/errOccEdit.html",
			controller: "ErrOccEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ErrOccRestService', '$log', function($stateParams, ErrOccRestService, log) {
					return ErrOccRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editErrOccDfuSta', {
			url: "/erroccdfusta/{id}",
	    	templateUrl: "assets/tpl/apps/errOccDfuSta/errOccDfuStaEdit.html",
			controller: "ErrOccDfuStaEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ErrOccDfuStaRestService', '$log', function($stateParams, ErrOccDfuStaRestService, log) {
					return ErrOccDfuStaRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editErrTrg', {
			url: "/errtrg/{id}",
	    	templateUrl: "assets/tpl/apps/errTrg/errTrgEdit.html",
			controller: "ErrTrgEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ErrTrgRestService', '$log', function($stateParams, ErrTrgRestService, log) {
					return ErrTrgRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editFaxAdd', {
			url: "/faxadd/{id}",
	    	templateUrl: "assets/tpl/apps/faxAdd/faxAddEdit.html",
			controller: "FaxAddEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'FaxAddRestService', '$log', function($stateParams, FaxAddRestService, log) {
					return FaxAddRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('editFaxChl', {
			url: "/faxchl/{id}",
	    	templateUrl: "assets/tpl/apps/faxChl/faxChlEdit.html",
			controller: "FaxChlEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'FaxChlRestService', '$log', function($stateParams, FaxChlRestService, log) {
					return FaxChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editFie', {
			url: "/fie/{id}",
	    	templateUrl: "assets/tpl/apps/fie/fieEdit.html",
			controller: "FieEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'FieRestService', '$log', function($stateParams, FieRestService, log) {
					return FieRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editFieLnk', {
			url: "/fielnk/{id}",
	    	templateUrl: "assets/tpl/apps/fieLnk/fieLnkEdit.html",
			controller: "FieLnkEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'FieLnkRestService', '$log', function($stateParams, FieLnkRestService, log) {
					return FieLnkRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editFiePar', {
			url: "/fiepar/{id}",
	    	templateUrl: "assets/tpl/apps/fiePar/fieParEdit.html",
			controller: "FieParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'FieParRestService', '$log', function($stateParams, FieParRestService, log) {
					return FieParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
						
					$stateProvider
		.state('editFileDocuments', {
			url: "/filedocuments/{id}",
	    	templateUrl: "assets/tpl/apps/fileDocuments/fileDocumentsEdit.html",
			controller: "FileDocumentsEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'FileDocumentsRestService', '$log', function($stateParams, FileDocumentsRestService, log) {
					return FileDocumentsRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editFtpChl', {
			url: "/ftpchl/{id}",
	    	templateUrl: "assets/tpl/apps/ftpChl/ftpChlEdit.html",
			controller: "FtpChlEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'FtpChlRestService', '$log', function($stateParams, FtpChlRestService, log) {
					return FtpChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editFulMqRptReq', {
			url: "/fulmqrptreq/{id}",
	    	templateUrl: "assets/tpl/apps/fulMqRptReq/fulMqRptReqEdit.html",
			controller: "FulMqRptReqEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'FulMqRptReqRestService', '$log', function($stateParams, FulMqRptReqRestService, log) {
					return FulMqRptReqRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
									
						
							$stateProvider
		.state('editGloPar', {
			url: "/glopar/{parCatIde},{key}",
	    	templateUrl: "assets/tpl/apps/gloPar/gloParEdit.html",
			controller: "GloParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'GloParRestService', '$log', function($stateParams, GloParRestService, log) {
					return GloParRestService.get({parCatIde: $stateParams.parCatIde, key: $stateParams.key}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editInfoRoute', {
			url: "/inforoute/{id}",
	    	templateUrl: "assets/tpl/apps/infoRoute/infoRouteEdit.html",
			controller: "InfoRouteEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'InfoRouteRestService', '$log', function($stateParams, InfoRouteRestService, log) {
					return InfoRouteRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
						
					$stateProvider
		.state('editInlGrp', {
			url: "/inlgrp/{id}",
	    	templateUrl: "assets/tpl/apps/inlGrp/inlGrpEdit.html",
			controller: "InlGrpEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'InlGrpRestService', '$log', function($stateParams, InlGrpRestService, log) {
					return InlGrpRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						

													
																	
						
							$stateProvider
		.state('editInlUsrGrpLnk', {
			url: "/inlusrgrplnk/{grpIde},{usrIde}",
	    	templateUrl: "assets/tpl/apps/inlUsrGrpLnk/inlUsrGrpLnkEdit.html",
			controller: "InlUsrGrpLnkEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'InlUsrGrpLnkRestService', '$log', function($stateParams, InlUsrGrpLnkRestService, log) {
					return InlUsrGrpLnkRestService.get({grpIde: $stateParams.grpIde, usrIde: $stateParams.usrIde}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editJob', {
			url: "/job/{id}",
	    	templateUrl: "assets/tpl/apps/job/jobEdit.html",
			controller: "JobEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'JobRestService', '$log', function($stateParams, JobRestService, log) {
					return JobRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editJobPar', {
			url: "/jobpar/{id}",
	    	templateUrl: "assets/tpl/apps/jobPar/jobParEdit.html",
			controller: "JobParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'JobParRestService', '$log', function($stateParams, JobParRestService, log) {
					return JobParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editJobParVal', {
			url: "/jobparval/{id}",
	    	templateUrl: "assets/tpl/apps/jobParVal/jobParValEdit.html",
			controller: "JobParValEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'JobParValRestService', '$log', function($stateParams, JobParValRestService, log) {
					return JobParValRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editLogMalDfuLst', {
			url: "/logmaldfulst/{id}",
	    	templateUrl: "assets/tpl/apps/logMalDfuLst/logMalDfuLstEdit.html",
			controller: "LogMalDfuLstEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'LogMalDfuLstRestService', '$log', function($stateParams, LogMalDfuLstRestService, log) {
					return LogMalDfuLstRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editLogMalErrCde', {
			url: "/logmalerrcde/{id}",
	    	templateUrl: "assets/tpl/apps/logMalErrCde/logMalErrCdeEdit.html",
			controller: "LogMalErrCdeEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'LogMalErrCdeRestService', '$log', function($stateParams, LogMalErrCdeRestService, log) {
					return LogMalErrCdeRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editLogPar', {
			url: "/logpar/{id}",
	    	templateUrl: "assets/tpl/apps/logPar/logParEdit.html",
			controller: "LogParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'LogParRestService', '$log', function($stateParams, LogParRestService, log) {
					return LogParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
						
					$stateProvider
		.state('editLogTivMap', {
			url: "/logtivmap/{id}",
	    	templateUrl: "assets/tpl/apps/logTivMap/logTivMapEdit.html",
			controller: "LogTivMapEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'LogTivMapRestService', '$log', function($stateParams, LogTivMapRestService, log) {
					return LogTivMapRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editMalAdd', {
			url: "/maladd/{id}",
	    	templateUrl: "assets/tpl/apps/malAdd/malAddEdit.html",
			controller: "MalAddEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'MalAddRestService', '$log', function($stateParams, MalAddRestService, log) {
					return MalAddRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
						
					$stateProvider
		.state('editMalChl', {
			url: "/malchl/{id}",
	    	templateUrl: "assets/tpl/apps/malChl/malChlEdit.html",
			controller: "MalChlEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'MalChlRestService', '$log', function($stateParams, MalChlRestService, log) {
					return MalChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('editMalSvr', {
			url: "/malsvr/{id}",
	    	templateUrl: "assets/tpl/apps/malSvr/malSvrEdit.html",
			controller: "MalSvrEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'MalSvrRestService', '$log', function($stateParams, MalSvrRestService, log) {
					return MalSvrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
						
					$stateProvider
		.state('editParCat', {
			url: "/parcat/{id}",
	    	templateUrl: "assets/tpl/apps/parCat/parCatEdit.html",
			controller: "ParCatEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ParCatRestService', '$log', function($stateParams, ParCatRestService, log) {
					return ParCatRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editPlanTable', {
			url: "/plantable/{id}",
	    	templateUrl: "assets/tpl/apps/planTable/planTableEdit.html",
			controller: "PlanTableEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'PlanTableRestService', '$log', function($stateParams, PlanTableRestService, log) {
					return PlanTableRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editRecipients', {
			url: "/recipients/{id}",
	    	templateUrl: "assets/tpl/apps/recipients/recipientsEdit.html",
			controller: "RecipientsEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'RecipientsRestService', '$log', function($stateParams, RecipientsRestService, log) {
					return RecipientsRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('editRpt', {
			url: "/rpt/{id}",
	    	templateUrl: "assets/tpl/apps/rpt/rptEdit.html",
			controller: "RptEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'RptRestService', '$log', function($stateParams, RptRestService, log) {
					return RptRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editRptSpnLnk', {
			url: "/rptspnlnk/{id}",
	    	templateUrl: "assets/tpl/apps/rptSpnLnk/rptSpnLnkEdit.html",
			controller: "RptSpnLnkEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'RptSpnLnkRestService', '$log', function($stateParams, RptSpnLnkRestService, log) {
					return RptSpnLnkRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editScdJob', {
			url: "/scdjob/{id}",
	    	templateUrl: "assets/tpl/apps/scdJob/scdJobEdit.html",
			controller: "ScdJobEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ScdJobRestService', '$log', function($stateParams, ScdJobRestService, log) {
					return ScdJobRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
						
					$stateProvider
		.state('editScdJobLog', {
			url: "/scdjoblog/{id}",
	    	templateUrl: "assets/tpl/apps/scdJobLog/scdJobLogEdit.html",
			controller: "ScdJobLogEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ScdJobLogRestService', '$log', function($stateParams, ScdJobLogRestService, log) {
					return ScdJobLogRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
						
							$stateProvider
		.state('editScdJobLogPar', {
			url: "/scdjoblogpar/{scdJobLogIde},{parNme}",
	    	templateUrl: "assets/tpl/apps/scdJobLogPar/scdJobLogParEdit.html",
			controller: "ScdJobLogParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ScdJobLogParRestService', '$log', function($stateParams, ScdJobLogParRestService, log) {
					return ScdJobLogParRestService.get({scdJobLogIde: $stateParams.scdJobLogIde, parNme: $stateParams.parNme}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
						
							$stateProvider
		.state('editScdJobPar', {
			url: "/scdjobpar/{scdJobIde},{parNme}",
	    	templateUrl: "assets/tpl/apps/scdJobPar/scdJobParEdit.html",
			controller: "ScdJobParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ScdJobParRestService', '$log', function($stateParams, ScdJobParRestService, log) {
					return ScdJobParRestService.get({scdJobIde: $stateParams.scdJobIde, parNme: $stateParams.parNme}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
						
							$stateProvider
		.state('editScdTrgPar', {
			url: "/scdtrgpar/{scdJobIde},{parNme}",
	    	templateUrl: "assets/tpl/apps/scdTrgPar/scdTrgParEdit.html",
			controller: "ScdTrgParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ScdTrgParRestService', '$log', function($stateParams, ScdTrgParRestService, log) {
					return ScdTrgParRestService.get({scdJobIde: $stateParams.scdJobIde, parNme: $stateParams.parNme}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
						
					$stateProvider
		.state('editScr', {
			url: "/scr/{id}",
	    	templateUrl: "assets/tpl/apps/scr/scrEdit.html",
			controller: "ScrEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'ScrRestService', '$log', function($stateParams, ScrRestService, log) {
					return ScrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editSeqNme', {
			url: "/seqnme/{id}",
	    	templateUrl: "assets/tpl/apps/seqNme/seqNmeEdit.html",
			controller: "SeqNmeEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'SeqNmeRestService', '$log', function($stateParams, SeqNmeRestService, log) {
					return SeqNmeRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editSpn', {
			url: "/spn/{id}",
	    	templateUrl: "assets/tpl/apps/spn/spnEdit.html",
			controller: "SpnEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'SpnRestService', '$log', function($stateParams, SpnRestService, log) {
					return SpnRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
																	
									
						
							$stateProvider
		.state('editStdFieNbr', {
			url: "/stdfienbr/{rptSpnIde},{fndNbr},{ineDte}",
	    	templateUrl: "assets/tpl/apps/stdFieNbr/stdFieNbrEdit.html",
			controller: "StdFieNbrEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'StdFieNbrRestService', '$log', function($stateParams, StdFieNbrRestService, log) {
					return StdFieNbrRestService.get({rptSpnIde: $stateParams.rptSpnIde, fndNbr: $stateParams.fndNbr, ineDte: $stateParams.ineDte}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editSwiftArchiver', {
			url: "/swiftarchiver/{id}",
	    	templateUrl: "assets/tpl/apps/swiftArchiver/swiftArchiverEdit.html",
			controller: "SwiftArchiverEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'SwiftArchiverRestService', '$log', function($stateParams, SwiftArchiverRestService, log) {
					return SwiftArchiverRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
						
					$stateProvider
		.state('editTmpMsgRpy', {
			url: "/tmpmsgrpy/{id}",
	    	templateUrl: "assets/tpl/apps/tmpMsgRpy/tmpMsgRpyEdit.html",
			controller: "TmpMsgRpyEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'TmpMsgRpyRestService', '$log', function($stateParams, TmpMsgRpyRestService, log) {
					return TmpMsgRpyRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editTopCal', {
			url: "/topcal/{id}",
	    	templateUrl: "assets/tpl/apps/topCal/topCalEdit.html",
			controller: "TopCalEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'TopCalRestService', '$log', function($stateParams, TopCalRestService, log) {
					return TopCalRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editTrfPar', {
			url: "/trfpar/{id}",
	    	templateUrl: "assets/tpl/apps/trfPar/trfParEdit.html",
			controller: "TrfParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'TrfParRestService', '$log', function($stateParams, TrfParRestService, log) {
					return TrfParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editUploads', {
			url: "/uploads/{id}",
	    	templateUrl: "assets/tpl/apps/uploads/uploadsEdit.html",
			controller: "UploadsEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'UploadsRestService', '$log', function($stateParams, UploadsRestService, log) {
					return UploadsRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsDiffusion', {
			url: "/vbsdiffusion/{id}",
	    	templateUrl: "assets/tpl/apps/vbsDiffusion/vbsDiffusionEdit.html",
			controller: "VbsDiffusionEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsDiffusionRestService', '$log', function($stateParams, VbsDiffusionRestService, log) {
					return VbsDiffusionRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsDiffusionAvant2015', {
			url: "/vbsdiffusionavant2015/{id}",
	    	templateUrl: "assets/tpl/apps/vbsDiffusionAvant2015/vbsDiffusionAvant2015Edit.html",
			controller: "VbsDiffusionAvant2015EditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsDiffusionAvant2015RestService', '$log', function($stateParams, VbsDiffusionAvant2015RestService, log) {
					return VbsDiffusionAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsFlow', {
			url: "/vbsflow/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlow/vbsFlowEdit.html",
			controller: "VbsFlowEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowRestService', '$log', function($stateParams, VbsFlowRestService, log) {
					return VbsFlowRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsFlowAvant2015', {
			url: "/vbsflowavant2015/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowAvant2015/vbsFlowAvant2015Edit.html",
			controller: "VbsFlowAvant2015EditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowAvant2015RestService', '$log', function($stateParams, VbsFlowAvant2015RestService, log) {
					return VbsFlowAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsFlowUnit', {
			url: "/vbsflowunit/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnit/vbsFlowUnitEdit.html",
			controller: "VbsFlowUnitEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitRestService', '$log', function($stateParams, VbsFlowUnitRestService, log) {
					return VbsFlowUnitRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsFlowUnitAvant2015', {
			url: "/vbsflowunitavant2015/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitAvant2015/vbsFlowUnitAvant2015Edit.html",
			controller: "VbsFlowUnitAvant2015EditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitAvant2015RestService', '$log', function($stateParams, VbsFlowUnitAvant2015RestService, log) {
					return VbsFlowUnitAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editVbsFlowUnitDiffusion', {
			url: "/vbsflowunitdiffusion/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusion/vbsFlowUnitDiffusionEdit.html",
			controller: "VbsFlowUnitDiffusionEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitDiffusionRestService', '$log', function($stateParams, VbsFlowUnitDiffusionRestService, log) {
					return VbsFlowUnitDiffusionRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editVbsFlowUnitDiffusionA2015', {
			url: "/vbsflowunitdiffusiona2015/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusionA2015/vbsFlowUnitDiffusionA2015Edit.html",
			controller: "VbsFlowUnitDiffusionA2015EditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitDiffusionA2015RestService', '$log', function($stateParams, VbsFlowUnitDiffusionA2015RestService, log) {
					return VbsFlowUnitDiffusionA2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editVbsFlowUnitMedia', {
			url: "/vbsflowunitmedia/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMedia/vbsFlowUnitMediaEdit.html",
			controller: "VbsFlowUnitMediaEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitMediaRestService', '$log', function($stateParams, VbsFlowUnitMediaRestService, log) {
					return VbsFlowUnitMediaRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editVbsFlowUnitMediaAvant2015', {
			url: "/vbsflowunitmediaavant2015/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMediaAvant2015/vbsFlowUnitMediaAvant2015Edit.html",
			controller: "VbsFlowUnitMediaAvant2015EditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitMediaAvant2015RestService', '$log', function($stateParams, VbsFlowUnitMediaAvant2015RestService, log) {
					return VbsFlowUnitMediaAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsFlowUnitSubFnd', {
			url: "/vbsflowunitsubfnd/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFnd/vbsFlowUnitSubFndEdit.html",
			controller: "VbsFlowUnitSubFndEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitSubFndRestService', '$log', function($stateParams, VbsFlowUnitSubFndRestService, log) {
					return VbsFlowUnitSubFndRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsFlowUnitSubFndA2015', {
			url: "/vbsflowunitsubfnda2015/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFndA2015/vbsFlowUnitSubFndA2015Edit.html",
			controller: "VbsFlowUnitSubFndA2015EditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitSubFndA2015RestService', '$log', function($stateParams, VbsFlowUnitSubFndA2015RestService, log) {
					return VbsFlowUnitSubFndA2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editVbsFlowUnitTrans', {
			url: "/vbsflowunittrans/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTrans/vbsFlowUnitTransEdit.html",
			controller: "VbsFlowUnitTransEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitTransRestService', '$log', function($stateParams, VbsFlowUnitTransRestService, log) {
					return VbsFlowUnitTransRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('editVbsFlowUnitTransAvant2015', {
			url: "/vbsflowunittransavant2015/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTransAvant2015/vbsFlowUnitTransAvant2015Edit.html",
			controller: "VbsFlowUnitTransAvant2015EditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsFlowUnitTransAvant2015RestService', '$log', function($stateParams, VbsFlowUnitTransAvant2015RestService, log) {
					return VbsFlowUnitTransAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsStatus', {
			url: "/vbsstatus/{id}",
	    	templateUrl: "assets/tpl/apps/vbsStatus/vbsStatusEdit.html",
			controller: "VbsStatusEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsStatusRestService', '$log', function($stateParams, VbsStatusRestService, log) {
					return VbsStatusRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('editVbsStatusAvant2015', {
			url: "/vbsstatusavant2015/{id}",
	    	templateUrl: "assets/tpl/apps/vbsStatusAvant2015/vbsStatusAvant2015Edit.html",
			controller: "VbsStatusAvant2015EditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'VbsStatusAvant2015RestService', '$log', function($stateParams, VbsStatusAvant2015RestService, log) {
					return VbsStatusAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
						
							$stateProvider
		.state('editWrkSpnDfu', {
			url: "/wrkspndfu/{wrkDfuAppCde},{wrkDfuSpnIde}",
	    	templateUrl: "assets/tpl/apps/wrkSpnDfu/wrkSpnDfuEdit.html",
			controller: "WrkSpnDfuEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'WrkSpnDfuRestService', '$log', function($stateParams, WrkSpnDfuRestService, log) {
					return WrkSpnDfuRestService.get({wrkDfuAppCde: $stateParams.wrkDfuAppCde, wrkDfuSpnIde: $stateParams.wrkDfuSpnIde}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
																	
						
							$stateProvider
		.state('editWrkSpnFul', {
			url: "/wrkspnful/{wrkSpnIde},{wrkAppCde},{wrkDfuDte}",
	    	templateUrl: "assets/tpl/apps/wrkSpnFul/wrkSpnFulEdit.html",
			controller: "WrkSpnFulEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'WrkSpnFulRestService', '$log', function($stateParams, WrkSpnFulRestService, log) {
					return WrkSpnFulRestService.get({wrkSpnIde: $stateParams.wrkSpnIde, wrkAppCde: $stateParams.wrkAppCde, wrkDfuDte: $stateParams.wrkDfuDte}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
						
					$stateProvider
		.state('editXdpPar', {
			url: "/xdppar/{id}",
	    	templateUrl: "assets/tpl/apps/xdpPar/xdpParEdit.html",
			controller: "XdpParEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'XdpParRestService', '$log', function($stateParams, XdpParRestService, log) {
					return XdpParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});

					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewAlert', {
			url: "/alert/view/{id}",
	    	templateUrl: "assets/tpl/apps/alert/alertEdit.html",
			controller: "AlertEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'AlertRestService', '$log', function($stateParams, AlertRestService, log) {
					return AlertRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewAlertLogDetail', {
			url: "/alertlogdetail/view/{id}",
	    	templateUrl: "assets/tpl/apps/alertLogDetail/alertLogDetailEdit.html",
			controller: "AlertLogDetailEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'AlertLogDetailRestService', '$log', function($stateParams, AlertLogDetailRestService, log) {
					return AlertLogDetailRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('viewAlertMsg', {
			url: "/alertmsg/view/{id}",
	    	templateUrl: "assets/tpl/apps/alertMsg/alertMsgEdit.html",
			controller: "AlertMsgEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'AlertMsgRestService', '$log', function($stateParams, AlertMsgRestService, log) {
					return AlertMsgRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewAlertMsgMail', {
			url: "/alertmsgmail/view/{id}",
	    	templateUrl: "assets/tpl/apps/alertMsgMail/alertMsgMailEdit.html",
			controller: "AlertMsgMailEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'AlertMsgMailRestService', '$log', function($stateParams, AlertMsgMailRestService, log) {
					return AlertMsgMailRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewAlertRpt', {
			url: "/alertrpt/view/{id}",
	    	templateUrl: "assets/tpl/apps/alertRpt/alertRptEdit.html",
			controller: "AlertRptEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'AlertRptRestService', '$log', function($stateParams, AlertRptRestService, log) {
					return AlertRptRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
						
					$stateProvider
		.state('viewAttachments', {
			url: "/attachments/view/{id}",
	    	templateUrl: "assets/tpl/apps/attachments/attachmentsEdit.html",
			controller: "AttachmentsEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'AttachmentsRestService', '$log', function($stateParams, AttachmentsRestService, log) {
					return AttachmentsRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewChl', {
			url: "/chl/view/{id}",
	    	templateUrl: "assets/tpl/apps/chl/chlEdit.html",
			controller: "ChlEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ChlRestService', '$log', function($stateParams, ChlRestService, log) {
					return ChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewCodes', {
			url: "/codes/view/{id}",
	    	templateUrl: "assets/tpl/apps/codes/codesEdit.html",
			controller: "CodesEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'CodesRestService', '$log', function($stateParams, CodesRestService, log) {
					return CodesRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewDfuLog', {
			url: "/dfulog/view/{id}",
	    	templateUrl: "assets/tpl/apps/dfuLog/dfuLogEdit.html",
			controller: "DfuLogEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'DfuLogRestService', '$log', function($stateParams, DfuLogRestService, log) {
					return DfuLogRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewDiffusionList', {
			url: "/diffusionlist/view/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionList/diffusionListEdit.html",
			controller: "DiffusionListEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'DiffusionListRestService', '$log', function($stateParams, DiffusionListRestService, log) {
					return DiffusionListRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
						
					$stateProvider
		.state('viewDiffusionListAud', {
			url: "/diffusionlistaud/view/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionListAud/diffusionListAudEdit.html",
			controller: "DiffusionListAudEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'DiffusionListAudRestService', '$log', function($stateParams, DiffusionListAudRestService, log) {
					return DiffusionListAudRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewDiffusionListPar', {
			url: "/diffusionlistpar/view/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionListPar/diffusionListParEdit.html",
			controller: "DiffusionListParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'DiffusionListParRestService', '$log', function($stateParams, DiffusionListParRestService, log) {
					return DiffusionListParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewDiffusionListParAud', {
			url: "/diffusionlistparaud/view/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionListParAud/diffusionListParAudEdit.html",
			controller: "DiffusionListParAudEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'DiffusionListParAudRestService', '$log', function($stateParams, DiffusionListParAudRestService, log) {
					return DiffusionListParAudRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewDiffusionMessage', {
			url: "/diffusionmessage/view/{id}",
	    	templateUrl: "assets/tpl/apps/diffusionMessage/diffusionMessageEdit.html",
			controller: "DiffusionMessageEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'DiffusionMessageRestService', '$log', function($stateParams, DiffusionMessageRestService, log) {
					return DiffusionMessageRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewEdmChl', {
			url: "/edmchl/view/{id}",
	    	templateUrl: "assets/tpl/apps/edmChl/edmChlEdit.html",
			controller: "EdmChlEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'EdmChlRestService', '$log', function($stateParams, EdmChlRestService, log) {
					return EdmChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewEdmExeLog', {
			url: "/edmexelog/view/{id}",
	    	templateUrl: "assets/tpl/apps/edmExeLog/edmExeLogEdit.html",
			controller: "EdmExeLogEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'EdmExeLogRestService', '$log', function($stateParams, EdmExeLogRestService, log) {
					return EdmExeLogRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewEdmJobReqLog', {
			url: "/edmjobreqlog/view/{id}",
	    	templateUrl: "assets/tpl/apps/edmJobReqLog/edmJobReqLogEdit.html",
			controller: "EdmJobReqLogEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'EdmJobReqLogRestService', '$log', function($stateParams, EdmJobReqLogRestService, log) {
					return EdmJobReqLogRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewEdmSecurity', {
			url: "/edmsecurity/view/{id}",
	    	templateUrl: "assets/tpl/apps/edmSecurity/edmSecurityEdit.html",
			controller: "EdmSecurityEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'EdmSecurityRestService', '$log', function($stateParams, EdmSecurityRestService, log) {
					return EdmSecurityRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewEdmSvr', {
			url: "/edmsvr/view/{id}",
	    	templateUrl: "assets/tpl/apps/edmSvr/edmSvrEdit.html",
			controller: "EdmSvrEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'EdmSvrRestService', '$log', function($stateParams, EdmSvrRestService, log) {
					return EdmSvrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewErr', {
			url: "/err/view/{id}",
	    	templateUrl: "assets/tpl/apps/err/errEdit.html",
			controller: "ErrEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ErrRestService', '$log', function($stateParams, ErrRestService, log) {
					return ErrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('viewErrOcc', {
			url: "/errocc/view/{id}",
	    	templateUrl: "assets/tpl/apps/errOcc/errOccEdit.html",
			controller: "ErrOccEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ErrOccRestService', '$log', function($stateParams, ErrOccRestService, log) {
					return ErrOccRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewErrOccDfuSta', {
			url: "/erroccdfusta/view/{id}",
	    	templateUrl: "assets/tpl/apps/errOccDfuSta/errOccDfuStaEdit.html",
			controller: "ErrOccDfuStaEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ErrOccDfuStaRestService', '$log', function($stateParams, ErrOccDfuStaRestService, log) {
					return ErrOccDfuStaRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewErrTrg', {
			url: "/errtrg/view/{id}",
	    	templateUrl: "assets/tpl/apps/errTrg/errTrgEdit.html",
			controller: "ErrTrgEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ErrTrgRestService', '$log', function($stateParams, ErrTrgRestService, log) {
					return ErrTrgRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewFaxAdd', {
			url: "/faxadd/view/{id}",
	    	templateUrl: "assets/tpl/apps/faxAdd/faxAddEdit.html",
			controller: "FaxAddEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'FaxAddRestService', '$log', function($stateParams, FaxAddRestService, log) {
					return FaxAddRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('viewFaxChl', {
			url: "/faxchl/view/{id}",
	    	templateUrl: "assets/tpl/apps/faxChl/faxChlEdit.html",
			controller: "FaxChlEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'FaxChlRestService', '$log', function($stateParams, FaxChlRestService, log) {
					return FaxChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewFie', {
			url: "/fie/view/{id}",
	    	templateUrl: "assets/tpl/apps/fie/fieEdit.html",
			controller: "FieEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'FieRestService', '$log', function($stateParams, FieRestService, log) {
					return FieRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewFieLnk', {
			url: "/fielnk/view/{id}",
	    	templateUrl: "assets/tpl/apps/fieLnk/fieLnkEdit.html",
			controller: "FieLnkEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'FieLnkRestService', '$log', function($stateParams, FieLnkRestService, log) {
					return FieLnkRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewFiePar', {
			url: "/fiepar/view/{id}",
	    	templateUrl: "assets/tpl/apps/fiePar/fieParEdit.html",
			controller: "FieParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'FieParRestService', '$log', function($stateParams, FieParRestService, log) {
					return FieParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
						
					$stateProvider
		.state('viewFileDocuments', {
			url: "/filedocuments/view/{id}",
	    	templateUrl: "assets/tpl/apps/fileDocuments/fileDocumentsEdit.html",
			controller: "FileDocumentsEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'FileDocumentsRestService', '$log', function($stateParams, FileDocumentsRestService, log) {
					return FileDocumentsRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewFtpChl', {
			url: "/ftpchl/view/{id}",
	    	templateUrl: "assets/tpl/apps/ftpChl/ftpChlEdit.html",
			controller: "FtpChlEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'FtpChlRestService', '$log', function($stateParams, FtpChlRestService, log) {
					return FtpChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewFulMqRptReq', {
			url: "/fulmqrptreq/view/{id}",
	    	templateUrl: "assets/tpl/apps/fulMqRptReq/fulMqRptReqEdit.html",
			controller: "FulMqRptReqEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'FulMqRptReqRestService', '$log', function($stateParams, FulMqRptReqRestService, log) {
					return FulMqRptReqRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
									
						
							$stateProvider
		.state('viewGloPar', {
			url: "/glopar/view/{parCatIde},{key}",
	    	templateUrl: "assets/tpl/apps/gloPar/gloParEdit.html",
			controller: "GloParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'GloParRestService', '$log', function($stateParams, GloParRestService, log) {
					return GloParRestService.get({parCatIde: $stateParams.parCatIde, key: $stateParams.key}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewInfoRoute', {
			url: "/inforoute/view/{id}",
	    	templateUrl: "assets/tpl/apps/infoRoute/infoRouteEdit.html",
			controller: "InfoRouteEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'InfoRouteRestService', '$log', function($stateParams, InfoRouteRestService, log) {
					return InfoRouteRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
						
					$stateProvider
		.state('viewInlGrp', {
			url: "/inlgrp/view/{id}",
	    	templateUrl: "assets/tpl/apps/inlGrp/inlGrpEdit.html",
			controller: "InlGrpEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'InlGrpRestService', '$log', function($stateParams, InlGrpRestService, log) {
					return InlGrpRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewInlUsr', {
			url: "/inlusr/view/{id}",
	    	templateUrl: "assets/tpl/apps/inlUsr/inlUsrEdit.html",
			controller: "InlUsrEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'InlUsrRestService', '$log', function($stateParams, InlUsrRestService, log) {
					return InlUsrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
						
							$stateProvider
		.state('viewInlUsrGrpLnk', {
			url: "/inlusrgrplnk/view/{grpIde},{usrIde}",
	    	templateUrl: "assets/tpl/apps/inlUsrGrpLnk/inlUsrGrpLnkEdit.html",
			controller: "InlUsrGrpLnkEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'InlUsrGrpLnkRestService', '$log', function($stateParams, InlUsrGrpLnkRestService, log) {
					return InlUsrGrpLnkRestService.get({grpIde: $stateParams.grpIde, usrIde: $stateParams.usrIde}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewJob', {
			url: "/job/view/{id}",
	    	templateUrl: "assets/tpl/apps/job/jobEdit.html",
			controller: "JobEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'JobRestService', '$log', function($stateParams, JobRestService, log) {
					return JobRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewJobPar', {
			url: "/jobpar/view/{id}",
	    	templateUrl: "assets/tpl/apps/jobPar/jobParEdit.html",
			controller: "JobParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'JobParRestService', '$log', function($stateParams, JobParRestService, log) {
					return JobParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewJobParVal', {
			url: "/jobparval/view/{id}",
	    	templateUrl: "assets/tpl/apps/jobParVal/jobParValEdit.html",
			controller: "JobParValEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'JobParValRestService', '$log', function($stateParams, JobParValRestService, log) {
					return JobParValRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewLogMalDfuLst', {
			url: "/logmaldfulst/view/{id}",
	    	templateUrl: "assets/tpl/apps/logMalDfuLst/logMalDfuLstEdit.html",
			controller: "LogMalDfuLstEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'LogMalDfuLstRestService', '$log', function($stateParams, LogMalDfuLstRestService, log) {
					return LogMalDfuLstRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewLogMalErrCde', {
			url: "/logmalerrcde/view/{id}",
	    	templateUrl: "assets/tpl/apps/logMalErrCde/logMalErrCdeEdit.html",
			controller: "LogMalErrCdeEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'LogMalErrCdeRestService', '$log', function($stateParams, LogMalErrCdeRestService, log) {
					return LogMalErrCdeRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewLogPar', {
			url: "/logpar/view/{id}",
	    	templateUrl: "assets/tpl/apps/logPar/logParEdit.html",
			controller: "LogParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'LogParRestService', '$log', function($stateParams, LogParRestService, log) {
					return LogParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
						
					$stateProvider
		.state('viewLogTivMap', {
			url: "/logtivmap/view/{id}",
	    	templateUrl: "assets/tpl/apps/logTivMap/logTivMapEdit.html",
			controller: "LogTivMapEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'LogTivMapRestService', '$log', function($stateParams, LogTivMapRestService, log) {
					return LogTivMapRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewMalAdd', {
			url: "/maladd/view/{id}",
	    	templateUrl: "assets/tpl/apps/malAdd/malAddEdit.html",
			controller: "MalAddEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'MalAddRestService', '$log', function($stateParams, MalAddRestService, log) {
					return MalAddRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
						
					$stateProvider
		.state('viewMalChl', {
			url: "/malchl/view/{id}",
	    	templateUrl: "assets/tpl/apps/malChl/malChlEdit.html",
			controller: "MalChlEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'MalChlRestService', '$log', function($stateParams, MalChlRestService, log) {
					return MalChlRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('viewMalSvr', {
			url: "/malsvr/view/{id}",
	    	templateUrl: "assets/tpl/apps/malSvr/malSvrEdit.html",
			controller: "MalSvrEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'MalSvrRestService', '$log', function($stateParams, MalSvrRestService, log) {
					return MalSvrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
						
					$stateProvider
		.state('viewParCat', {
			url: "/parcat/view/{id}",
	    	templateUrl: "assets/tpl/apps/parCat/parCatEdit.html",
			controller: "ParCatEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ParCatRestService', '$log', function($stateParams, ParCatRestService, log) {
					return ParCatRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewPlanTable', {
			url: "/plantable/view/{id}",
	    	templateUrl: "assets/tpl/apps/planTable/planTableEdit.html",
			controller: "PlanTableEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'PlanTableRestService', '$log', function($stateParams, PlanTableRestService, log) {
					return PlanTableRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewRecipients', {
			url: "/recipients/view/{id}",
	    	templateUrl: "assets/tpl/apps/recipients/recipientsEdit.html",
			controller: "RecipientsEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'RecipientsRestService', '$log', function($stateParams, RecipientsRestService, log) {
					return RecipientsRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
						
					$stateProvider
		.state('viewRpt', {
			url: "/rpt/view/{id}",
	    	templateUrl: "assets/tpl/apps/rpt/rptEdit.html",
			controller: "RptEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'RptRestService', '$log', function($stateParams, RptRestService, log) {
					return RptRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewRptSpnLnk', {
			url: "/rptspnlnk/view/{id}",
	    	templateUrl: "assets/tpl/apps/rptSpnLnk/rptSpnLnkEdit.html",
			controller: "RptSpnLnkEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'RptSpnLnkRestService', '$log', function($stateParams, RptSpnLnkRestService, log) {
					return RptSpnLnkRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewScdJob', {
			url: "/scdjob/view/{id}",
	    	templateUrl: "assets/tpl/apps/scdJob/scdJobEdit.html",
			controller: "ScdJobEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ScdJobRestService', '$log', function($stateParams, ScdJobRestService, log) {
					return ScdJobRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
						
					$stateProvider
		.state('viewScdJobLog', {
			url: "/scdjoblog/view/{id}",
	    	templateUrl: "assets/tpl/apps/scdJobLog/scdJobLogEdit.html",
			controller: "ScdJobLogEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ScdJobLogRestService', '$log', function($stateParams, ScdJobLogRestService, log) {
					return ScdJobLogRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
						
							$stateProvider
		.state('viewScdJobLogPar', {
			url: "/scdjoblogpar/view/{scdJobLogIde},{parNme}",
	    	templateUrl: "assets/tpl/apps/scdJobLogPar/scdJobLogParEdit.html",
			controller: "ScdJobLogParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ScdJobLogParRestService', '$log', function($stateParams, ScdJobLogParRestService, log) {
					return ScdJobLogParRestService.get({scdJobLogIde: $stateParams.scdJobLogIde, parNme: $stateParams.parNme}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
						
							$stateProvider
		.state('viewScdJobPar', {
			url: "/scdjobpar/view/{scdJobIde},{parNme}",
	    	templateUrl: "assets/tpl/apps/scdJobPar/scdJobParEdit.html",
			controller: "ScdJobParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ScdJobParRestService', '$log', function($stateParams, ScdJobParRestService, log) {
					return ScdJobParRestService.get({scdJobIde: $stateParams.scdJobIde, parNme: $stateParams.parNme}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
						
							$stateProvider
		.state('viewScdTrgPar', {
			url: "/scdtrgpar/view/{scdJobIde},{parNme}",
	    	templateUrl: "assets/tpl/apps/scdTrgPar/scdTrgParEdit.html",
			controller: "ScdTrgParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ScdTrgParRestService', '$log', function($stateParams, ScdTrgParRestService, log) {
					return ScdTrgParRestService.get({scdJobIde: $stateParams.scdJobIde, parNme: $stateParams.parNme}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
						
					$stateProvider
		.state('viewScr', {
			url: "/scr/view/{id}",
	    	templateUrl: "assets/tpl/apps/scr/scrEdit.html",
			controller: "ScrEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'ScrRestService', '$log', function($stateParams, ScrRestService, log) {
					return ScrRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewSeqNme', {
			url: "/seqnme/view/{id}",
	    	templateUrl: "assets/tpl/apps/seqNme/seqNmeEdit.html",
			controller: "SeqNmeEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'SeqNmeRestService', '$log', function($stateParams, SeqNmeRestService, log) {
					return SeqNmeRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewSpn', {
			url: "/spn/view/{id}",
	    	templateUrl: "assets/tpl/apps/spn/spnEdit.html",
			controller: "SpnEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'SpnRestService', '$log', function($stateParams, SpnRestService, log) {
					return SpnRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
																	
									
						
							$stateProvider
		.state('viewStdFieNbr', {
			url: "/stdfienbr/view/{rptSpnIde},{fndNbr},{ineDte}",
	    	templateUrl: "assets/tpl/apps/stdFieNbr/stdFieNbrEdit.html",
			controller: "StdFieNbrEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'StdFieNbrRestService', '$log', function($stateParams, StdFieNbrRestService, log) {
					return StdFieNbrRestService.get({rptSpnIde: $stateParams.rptSpnIde, fndNbr: $stateParams.fndNbr, ineDte: $stateParams.ineDte}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewSwiftArchiver', {
			url: "/swiftarchiver/view/{id}",
	    	templateUrl: "assets/tpl/apps/swiftArchiver/swiftArchiverEdit.html",
			controller: "SwiftArchiverEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'SwiftArchiverRestService', '$log', function($stateParams, SwiftArchiverRestService, log) {
					return SwiftArchiverRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
						
					$stateProvider
		.state('viewTmpMsgRpy', {
			url: "/tmpmsgrpy/view/{id}",
	    	templateUrl: "assets/tpl/apps/tmpMsgRpy/tmpMsgRpyEdit.html",
			controller: "TmpMsgRpyEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'TmpMsgRpyRestService', '$log', function($stateParams, TmpMsgRpyRestService, log) {
					return TmpMsgRpyRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewTopCal', {
			url: "/topcal/view/{id}",
	    	templateUrl: "assets/tpl/apps/topCal/topCalEdit.html",
			controller: "TopCalEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'TopCalRestService', '$log', function($stateParams, TopCalRestService, log) {
					return TopCalRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewTrfPar', {
			url: "/trfpar/view/{id}",
	    	templateUrl: "assets/tpl/apps/trfPar/trfParEdit.html",
			controller: "TrfParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'TrfParRestService', '$log', function($stateParams, TrfParRestService, log) {
					return TrfParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewUploads', {
			url: "/uploads/view/{id}",
	    	templateUrl: "assets/tpl/apps/uploads/uploadsEdit.html",
			controller: "UploadsEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'UploadsRestService', '$log', function($stateParams, UploadsRestService, log) {
					return UploadsRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsDiffusion', {
			url: "/vbsdiffusion/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsDiffusion/vbsDiffusionEdit.html",
			controller: "VbsDiffusionEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsDiffusionRestService', '$log', function($stateParams, VbsDiffusionRestService, log) {
					return VbsDiffusionRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsDiffusionAvant2015', {
			url: "/vbsdiffusionavant2015/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsDiffusionAvant2015/vbsDiffusionAvant2015Edit.html",
			controller: "VbsDiffusionAvant2015EditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsDiffusionAvant2015RestService', '$log', function($stateParams, VbsDiffusionAvant2015RestService, log) {
					return VbsDiffusionAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsFlow', {
			url: "/vbsflow/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlow/vbsFlowEdit.html",
			controller: "VbsFlowEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowRestService', '$log', function($stateParams, VbsFlowRestService, log) {
					return VbsFlowRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsFlowAvant2015', {
			url: "/vbsflowavant2015/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowAvant2015/vbsFlowAvant2015Edit.html",
			controller: "VbsFlowAvant2015EditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowAvant2015RestService', '$log', function($stateParams, VbsFlowAvant2015RestService, log) {
					return VbsFlowAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsFlowUnit', {
			url: "/vbsflowunit/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnit/vbsFlowUnitEdit.html",
			controller: "VbsFlowUnitEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitRestService', '$log', function($stateParams, VbsFlowUnitRestService, log) {
					return VbsFlowUnitRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsFlowUnitAvant2015', {
			url: "/vbsflowunitavant2015/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitAvant2015/vbsFlowUnitAvant2015Edit.html",
			controller: "VbsFlowUnitAvant2015EditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitAvant2015RestService', '$log', function($stateParams, VbsFlowUnitAvant2015RestService, log) {
					return VbsFlowUnitAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewVbsFlowUnitDiffusion', {
			url: "/vbsflowunitdiffusion/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusion/vbsFlowUnitDiffusionEdit.html",
			controller: "VbsFlowUnitDiffusionEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitDiffusionRestService', '$log', function($stateParams, VbsFlowUnitDiffusionRestService, log) {
					return VbsFlowUnitDiffusionRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewVbsFlowUnitDiffusionA2015', {
			url: "/vbsflowunitdiffusiona2015/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusionA2015/vbsFlowUnitDiffusionA2015Edit.html",
			controller: "VbsFlowUnitDiffusionA2015EditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitDiffusionA2015RestService', '$log', function($stateParams, VbsFlowUnitDiffusionA2015RestService, log) {
					return VbsFlowUnitDiffusionA2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewVbsFlowUnitMedia', {
			url: "/vbsflowunitmedia/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMedia/vbsFlowUnitMediaEdit.html",
			controller: "VbsFlowUnitMediaEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitMediaRestService', '$log', function($stateParams, VbsFlowUnitMediaRestService, log) {
					return VbsFlowUnitMediaRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewVbsFlowUnitMediaAvant2015', {
			url: "/vbsflowunitmediaavant2015/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMediaAvant2015/vbsFlowUnitMediaAvant2015Edit.html",
			controller: "VbsFlowUnitMediaAvant2015EditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitMediaAvant2015RestService', '$log', function($stateParams, VbsFlowUnitMediaAvant2015RestService, log) {
					return VbsFlowUnitMediaAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsFlowUnitSubFnd', {
			url: "/vbsflowunitsubfnd/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFnd/vbsFlowUnitSubFndEdit.html",
			controller: "VbsFlowUnitSubFndEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitSubFndRestService', '$log', function($stateParams, VbsFlowUnitSubFndRestService, log) {
					return VbsFlowUnitSubFndRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsFlowUnitSubFndA2015', {
			url: "/vbsflowunitsubfnda2015/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFndA2015/vbsFlowUnitSubFndA2015Edit.html",
			controller: "VbsFlowUnitSubFndA2015EditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitSubFndA2015RestService', '$log', function($stateParams, VbsFlowUnitSubFndA2015RestService, log) {
					return VbsFlowUnitSubFndA2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewVbsFlowUnitTrans', {
			url: "/vbsflowunittrans/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTrans/vbsFlowUnitTransEdit.html",
			controller: "VbsFlowUnitTransEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitTransRestService', '$log', function($stateParams, VbsFlowUnitTransRestService, log) {
					return VbsFlowUnitTransRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
						
					$stateProvider
		.state('viewVbsFlowUnitTransAvant2015', {
			url: "/vbsflowunittransavant2015/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTransAvant2015/vbsFlowUnitTransAvant2015Edit.html",
			controller: "VbsFlowUnitTransAvant2015EditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsFlowUnitTransAvant2015RestService', '$log', function($stateParams, VbsFlowUnitTransAvant2015RestService, log) {
					return VbsFlowUnitTransAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsStatus', {
			url: "/vbsstatus/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsStatus/vbsStatusEdit.html",
			controller: "VbsStatusEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsStatusRestService', '$log', function($stateParams, VbsStatusRestService, log) {
					return VbsStatusRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
									
									
									
									
									
									
						
					$stateProvider
		.state('viewVbsStatusAvant2015', {
			url: "/vbsstatusavant2015/view/{id}",
	    	templateUrl: "assets/tpl/apps/vbsStatusAvant2015/vbsStatusAvant2015Edit.html",
			controller: "VbsStatusAvant2015EditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'VbsStatusAvant2015RestService', '$log', function($stateParams, VbsStatusAvant2015RestService, log) {
					return VbsStatusAvant2015RestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
									
						
							$stateProvider
		.state('viewWrkSpnDfu', {
			url: "/wrkspndfu/view/{wrkDfuAppCde},{wrkDfuSpnIde}",
	    	templateUrl: "assets/tpl/apps/wrkSpnDfu/wrkSpnDfuEdit.html",
			controller: "WrkSpnDfuEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'WrkSpnDfuRestService', '$log', function($stateParams, WrkSpnDfuRestService, log) {
					return WrkSpnDfuRestService.get({wrkDfuAppCde: $stateParams.wrkDfuAppCde, wrkDfuSpnIde: $stateParams.wrkDfuSpnIde}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
													
																	
																	
						
							$stateProvider
		.state('viewWrkSpnFul', {
			url: "/wrkspnful/view/{wrkSpnIde},{wrkAppCde},{wrkDfuDte}",
	    	templateUrl: "assets/tpl/apps/wrkSpnFul/wrkSpnFulEdit.html",
			controller: "WrkSpnFulEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'WrkSpnFulRestService', '$log', function($stateParams, WrkSpnFulRestService, log) {
					return WrkSpnFulRestService.get({wrkSpnIde: $stateParams.wrkSpnIde, wrkAppCde: $stateParams.wrkAppCde, wrkDfuDte: $stateParams.wrkDfuDte}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
						
					$stateProvider
		.state('viewXdpPar', {
			url: "/xdppar/view/{id}",
	    	templateUrl: "assets/tpl/apps/xdpPar/xdpParEdit.html",
			controller: "XdpParEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'XdpParRestService', '$log', function($stateParams, XdpParRestService, log) {
					return XdpParRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});

	$stateProvider
		.state('createAlert', {
			url: "/alert",
	    	templateUrl: "assets/tpl/apps/alert/alertEdit.html",
			controller: "AlertCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createAlertLogDetail', {
			url: "/alertlogdetail",
	    	templateUrl: "assets/tpl/apps/alertLogDetail/alertLogDetailEdit.html",
			controller: "AlertLogDetailCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createAlertMsg', {
			url: "/alertmsg",
	    	templateUrl: "assets/tpl/apps/alertMsg/alertMsgEdit.html",
			controller: "AlertMsgCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createAlertMsgMail', {
			url: "/alertmsgmail",
	    	templateUrl: "assets/tpl/apps/alertMsgMail/alertMsgMailEdit.html",
			controller: "AlertMsgMailCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createAlertRpt', {
			url: "/alertrpt",
	    	templateUrl: "assets/tpl/apps/alertRpt/alertRptEdit.html",
			controller: "AlertRptCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createAttachments', {
			url: "/attachments",
	    	templateUrl: "assets/tpl/apps/attachments/attachmentsEdit.html",
			controller: "AttachmentsCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createChl', {
			url: "/chl",
	    	templateUrl: "assets/tpl/apps/chl/chlEdit.html",
			controller: "ChlCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createCodes', {
			url: "/codes",
	    	templateUrl: "assets/tpl/apps/codes/codesEdit.html",
			controller: "CodesCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createDfuLog', {
			url: "/dfulog",
	    	templateUrl: "assets/tpl/apps/dfuLog/dfuLogEdit.html",
			controller: "DfuLogCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createDiffusionList', {
			url: "/diffusionlist",
	    	templateUrl: "assets/tpl/apps/diffusionList/diffusionListEdit.html",
			controller: "DiffusionListCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createDiffusionListAud', {
			url: "/diffusionlistaud",
	    	templateUrl: "assets/tpl/apps/diffusionListAud/diffusionListAudEdit.html",
			controller: "DiffusionListAudCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createDiffusionListPar', {
			url: "/diffusionlistpar",
	    	templateUrl: "assets/tpl/apps/diffusionListPar/diffusionListParEdit.html",
			controller: "DiffusionListParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createDiffusionListParAud', {
			url: "/diffusionlistparaud",
	    	templateUrl: "assets/tpl/apps/diffusionListParAud/diffusionListParAudEdit.html",
			controller: "DiffusionListParAudCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createDiffusionMessage', {
			url: "/diffusionmessage",
	    	templateUrl: "assets/tpl/apps/diffusionMessage/diffusionMessageEdit.html",
			controller: "DiffusionMessageCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createEdmChl', {
			url: "/edmchl",
	    	templateUrl: "assets/tpl/apps/edmChl/edmChlEdit.html",
			controller: "EdmChlCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createEdmExeLog', {
			url: "/edmexelog",
	    	templateUrl: "assets/tpl/apps/edmExeLog/edmExeLogEdit.html",
			controller: "EdmExeLogCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createEdmJobReqLog', {
			url: "/edmjobreqlog",
	    	templateUrl: "assets/tpl/apps/edmJobReqLog/edmJobReqLogEdit.html",
			controller: "EdmJobReqLogCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createEdmSecurity', {
			url: "/edmsecurity",
	    	templateUrl: "assets/tpl/apps/edmSecurity/edmSecurityEdit.html",
			controller: "EdmSecurityCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createEdmSvr', {
			url: "/edmsvr",
	    	templateUrl: "assets/tpl/apps/edmSvr/edmSvrEdit.html",
			controller: "EdmSvrCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createErr', {
			url: "/err",
	    	templateUrl: "assets/tpl/apps/err/errEdit.html",
			controller: "ErrCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createErrOcc', {
			url: "/errocc",
	    	templateUrl: "assets/tpl/apps/errOcc/errOccEdit.html",
			controller: "ErrOccCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createErrOccDfuSta', {
			url: "/erroccdfusta",
	    	templateUrl: "assets/tpl/apps/errOccDfuSta/errOccDfuStaEdit.html",
			controller: "ErrOccDfuStaCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createErrTrg', {
			url: "/errtrg",
	    	templateUrl: "assets/tpl/apps/errTrg/errTrgEdit.html",
			controller: "ErrTrgCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createFaxAdd', {
			url: "/faxadd",
	    	templateUrl: "assets/tpl/apps/faxAdd/faxAddEdit.html",
			controller: "FaxAddCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createFaxChl', {
			url: "/faxchl",
	    	templateUrl: "assets/tpl/apps/faxChl/faxChlEdit.html",
			controller: "FaxChlCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createFie', {
			url: "/fie",
	    	templateUrl: "assets/tpl/apps/fie/fieEdit.html",
			controller: "FieCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createFieLnk', {
			url: "/fielnk",
	    	templateUrl: "assets/tpl/apps/fieLnk/fieLnkEdit.html",
			controller: "FieLnkCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createFiePar', {
			url: "/fiepar",
	    	templateUrl: "assets/tpl/apps/fiePar/fieParEdit.html",
			controller: "FieParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createFileDocuments', {
			url: "/filedocuments",
	    	templateUrl: "assets/tpl/apps/fileDocuments/fileDocumentsEdit.html",
			controller: "FileDocumentsCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createFtpChl', {
			url: "/ftpchl",
	    	templateUrl: "assets/tpl/apps/ftpChl/ftpChlEdit.html",
			controller: "FtpChlCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createFulMqRptReq', {
			url: "/fulmqrptreq",
	    	templateUrl: "assets/tpl/apps/fulMqRptReq/fulMqRptReqEdit.html",
			controller: "FulMqRptReqCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createGloPar', {
			url: "/glopar",
	    	templateUrl: "assets/tpl/apps/gloPar/gloParEdit.html",
			controller: "GloParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createInfoRoute', {
			url: "/inforoute",
	    	templateUrl: "assets/tpl/apps/infoRoute/infoRouteEdit.html",
			controller: "InfoRouteCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createInlGrp', {
			url: "/inlgrp",
	    	templateUrl: "assets/tpl/apps/inlGrp/inlGrpEdit.html",
			controller: "InlGrpCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createInlUsr', {
			url: "/inlusr",
	    	templateUrl: "assets/tpl/apps/inlUsr/inlUsrEdit.html",
			controller: "InlUsrCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createInlUsrGrpLnk', {
			url: "/inlusrgrplnk",
	    	templateUrl: "assets/tpl/apps/inlUsrGrpLnk/inlUsrGrpLnkEdit.html",
			controller: "InlUsrGrpLnkCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createJob', {
			url: "/job",
	    	templateUrl: "assets/tpl/apps/job/jobEdit.html",
			controller: "JobCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createJobPar', {
			url: "/jobpar",
	    	templateUrl: "assets/tpl/apps/jobPar/jobParEdit.html",
			controller: "JobParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createJobParVal', {
			url: "/jobparval",
	    	templateUrl: "assets/tpl/apps/jobParVal/jobParValEdit.html",
			controller: "JobParValCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createLogMalDfuLst', {
			url: "/logmaldfulst",
	    	templateUrl: "assets/tpl/apps/logMalDfuLst/logMalDfuLstEdit.html",
			controller: "LogMalDfuLstCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createLogMalErrCde', {
			url: "/logmalerrcde",
	    	templateUrl: "assets/tpl/apps/logMalErrCde/logMalErrCdeEdit.html",
			controller: "LogMalErrCdeCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createLogPar', {
			url: "/logpar",
	    	templateUrl: "assets/tpl/apps/logPar/logParEdit.html",
			controller: "LogParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createLogTivMap', {
			url: "/logtivmap",
	    	templateUrl: "assets/tpl/apps/logTivMap/logTivMapEdit.html",
			controller: "LogTivMapCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createMalAdd', {
			url: "/maladd",
	    	templateUrl: "assets/tpl/apps/malAdd/malAddEdit.html",
			controller: "MalAddCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createMalChl', {
			url: "/malchl",
	    	templateUrl: "assets/tpl/apps/malChl/malChlEdit.html",
			controller: "MalChlCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createMalSvr', {
			url: "/malsvr",
	    	templateUrl: "assets/tpl/apps/malSvr/malSvrEdit.html",
			controller: "MalSvrCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createParCat', {
			url: "/parcat",
	    	templateUrl: "assets/tpl/apps/parCat/parCatEdit.html",
			controller: "ParCatCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createPlanTable', {
			url: "/plantable",
	    	templateUrl: "assets/tpl/apps/planTable/planTableEdit.html",
			controller: "PlanTableCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createRecipients', {
			url: "/recipients",
	    	templateUrl: "assets/tpl/apps/recipients/recipientsEdit.html",
			controller: "RecipientsCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createRpt', {
			url: "/rpt",
	    	templateUrl: "assets/tpl/apps/rpt/rptEdit.html",
			controller: "RptCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createRptSpnLnk', {
			url: "/rptspnlnk",
	    	templateUrl: "assets/tpl/apps/rptSpnLnk/rptSpnLnkEdit.html",
			controller: "RptSpnLnkCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createScdJob', {
			url: "/scdjob",
	    	templateUrl: "assets/tpl/apps/scdJob/scdJobEdit.html",
			controller: "ScdJobCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createScdJobLog', {
			url: "/scdjoblog",
	    	templateUrl: "assets/tpl/apps/scdJobLog/scdJobLogEdit.html",
			controller: "ScdJobLogCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createScdJobLogPar', {
			url: "/scdjoblogpar",
	    	templateUrl: "assets/tpl/apps/scdJobLogPar/scdJobLogParEdit.html",
			controller: "ScdJobLogParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createScdJobPar', {
			url: "/scdjobpar",
	    	templateUrl: "assets/tpl/apps/scdJobPar/scdJobParEdit.html",
			controller: "ScdJobParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createScdTrgPar', {
			url: "/scdtrgpar",
	    	templateUrl: "assets/tpl/apps/scdTrgPar/scdTrgParEdit.html",
			controller: "ScdTrgParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createScr', {
			url: "/scr",
	    	templateUrl: "assets/tpl/apps/scr/scrEdit.html",
			controller: "ScrCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createSeqNme', {
			url: "/seqnme",
	    	templateUrl: "assets/tpl/apps/seqNme/seqNmeEdit.html",
			controller: "SeqNmeCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createSpn', {
			url: "/spn",
	    	templateUrl: "assets/tpl/apps/spn/spnEdit.html",
			controller: "SpnCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createStdFieNbr', {
			url: "/stdfienbr",
	    	templateUrl: "assets/tpl/apps/stdFieNbr/stdFieNbrEdit.html",
			controller: "StdFieNbrCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createSwiftArchiver', {
			url: "/swiftarchiver",
	    	templateUrl: "assets/tpl/apps/swiftArchiver/swiftArchiverEdit.html",
			controller: "SwiftArchiverCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createTmpMsgRpy', {
			url: "/tmpmsgrpy",
	    	templateUrl: "assets/tpl/apps/tmpMsgRpy/tmpMsgRpyEdit.html",
			controller: "TmpMsgRpyCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createTopCal', {
			url: "/topcal",
	    	templateUrl: "assets/tpl/apps/topCal/topCalEdit.html",
			controller: "TopCalCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createTrfPar', {
			url: "/trfpar",
	    	templateUrl: "assets/tpl/apps/trfPar/trfParEdit.html",
			controller: "TrfParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createUploads', {
			url: "/uploads",
	    	templateUrl: "assets/tpl/apps/uploads/uploadsEdit.html",
			controller: "UploadsCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsDiffusion', {
			url: "/vbsdiffusion",
	    	templateUrl: "assets/tpl/apps/vbsDiffusion/vbsDiffusionEdit.html",
			controller: "VbsDiffusionCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsDiffusionAvant2015', {
			url: "/vbsdiffusionavant2015",
	    	templateUrl: "assets/tpl/apps/vbsDiffusionAvant2015/vbsDiffusionAvant2015Edit.html",
			controller: "VbsDiffusionAvant2015CreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlow', {
			url: "/vbsflow",
	    	templateUrl: "assets/tpl/apps/vbsFlow/vbsFlowEdit.html",
			controller: "VbsFlowCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowAvant2015', {
			url: "/vbsflowavant2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowAvant2015/vbsFlowAvant2015Edit.html",
			controller: "VbsFlowAvant2015CreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnit', {
			url: "/vbsflowunit",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnit/vbsFlowUnitEdit.html",
			controller: "VbsFlowUnitCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnitAvant2015', {
			url: "/vbsflowunitavant2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitAvant2015/vbsFlowUnitAvant2015Edit.html",
			controller: "VbsFlowUnitAvant2015CreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnitDiffusion', {
			url: "/vbsflowunitdiffusion",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusion/vbsFlowUnitDiffusionEdit.html",
			controller: "VbsFlowUnitDiffusionCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnitDiffusionA2015', {
			url: "/vbsflowunitdiffusiona2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusionA2015/vbsFlowUnitDiffusionA2015Edit.html",
			controller: "VbsFlowUnitDiffusionA2015CreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnitMedia', {
			url: "/vbsflowunitmedia",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMedia/vbsFlowUnitMediaEdit.html",
			controller: "VbsFlowUnitMediaCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnitMediaAvant2015', {
			url: "/vbsflowunitmediaavant2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMediaAvant2015/vbsFlowUnitMediaAvant2015Edit.html",
			controller: "VbsFlowUnitMediaAvant2015CreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnitSubFnd', {
			url: "/vbsflowunitsubfnd",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFnd/vbsFlowUnitSubFndEdit.html",
			controller: "VbsFlowUnitSubFndCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnitSubFndA2015', {
			url: "/vbsflowunitsubfnda2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFndA2015/vbsFlowUnitSubFndA2015Edit.html",
			controller: "VbsFlowUnitSubFndA2015CreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnitTrans', {
			url: "/vbsflowunittrans",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTrans/vbsFlowUnitTransEdit.html",
			controller: "VbsFlowUnitTransCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsFlowUnitTransAvant2015', {
			url: "/vbsflowunittransavant2015",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTransAvant2015/vbsFlowUnitTransAvant2015Edit.html",
			controller: "VbsFlowUnitTransAvant2015CreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsStatus', {
			url: "/vbsstatus",
	    	templateUrl: "assets/tpl/apps/vbsStatus/vbsStatusEdit.html",
			controller: "VbsStatusCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createVbsStatusAvant2015', {
			url: "/vbsstatusavant2015",
	    	templateUrl: "assets/tpl/apps/vbsStatusAvant2015/vbsStatusAvant2015Edit.html",
			controller: "VbsStatusAvant2015CreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createWrkSpnDfu', {
			url: "/wrkspndfu",
	    	templateUrl: "assets/tpl/apps/wrkSpnDfu/wrkSpnDfuEdit.html",
			controller: "WrkSpnDfuCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createWrkSpnFul', {
			url: "/wrkspnful",
	    	templateUrl: "assets/tpl/apps/wrkSpnFul/wrkSpnFulEdit.html",
			controller: "WrkSpnFulCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createXdpPar', {
			url: "/xdppar",
	    	templateUrl: "assets/tpl/apps/xdpPar/xdpParEdit.html",
			controller: "XdpParCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});

	$stateProvider
		.state('configAlert', {
			url: "/alertConfig",
	    	templateUrl: "assets/tpl/apps/alert/alertConfig.html",
			controller: "AlertConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Alert'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Alert", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configAlertLogDetail', {
			url: "/alertLogDetailConfig",
	    	templateUrl: "assets/tpl/apps/alertLogDetail/alertLogDetailConfig.html",
			controller: "AlertLogDetailConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'AlertLogDetail'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "AlertLogDetail", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configAlertMsg', {
			url: "/alertMsgConfig",
	    	templateUrl: "assets/tpl/apps/alertMsg/alertMsgConfig.html",
			controller: "AlertMsgConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'AlertMsg'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "AlertMsg", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configAlertMsgMail', {
			url: "/alertMsgMailConfig",
	    	templateUrl: "assets/tpl/apps/alertMsgMail/alertMsgMailConfig.html",
			controller: "AlertMsgMailConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'AlertMsgMail'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "AlertMsgMail", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configAlertRpt', {
			url: "/alertRptConfig",
	    	templateUrl: "assets/tpl/apps/alertRpt/alertRptConfig.html",
			controller: "AlertRptConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'AlertRpt'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "AlertRpt", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configAttachments', {
			url: "/attachmentsConfig",
	    	templateUrl: "assets/tpl/apps/attachments/attachmentsConfig.html",
			controller: "AttachmentsConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Attachments'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Attachments", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configChl', {
			url: "/chlConfig",
	    	templateUrl: "assets/tpl/apps/chl/chlConfig.html",
			controller: "ChlConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Chl'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Chl", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configCodes', {
			url: "/codesConfig",
	    	templateUrl: "assets/tpl/apps/codes/codesConfig.html",
			controller: "CodesConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Codes'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Codes", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configDfuLog', {
			url: "/dfuLogConfig",
	    	templateUrl: "assets/tpl/apps/dfuLog/dfuLogConfig.html",
			controller: "DfuLogConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'DfuLog'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "DfuLog", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configDiffusionList', {
			url: "/diffusionListConfig",
	    	templateUrl: "assets/tpl/apps/diffusionList/diffusionListConfig.html",
			controller: "DiffusionListConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'DiffusionList'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "DiffusionList", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configDiffusionListAud', {
			url: "/diffusionListAudConfig",
	    	templateUrl: "assets/tpl/apps/diffusionListAud/diffusionListAudConfig.html",
			controller: "DiffusionListAudConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'DiffusionListAud'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "DiffusionListAud", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configDiffusionListPar', {
			url: "/diffusionListParConfig",
	    	templateUrl: "assets/tpl/apps/diffusionListPar/diffusionListParConfig.html",
			controller: "DiffusionListParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'DiffusionListPar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "DiffusionListPar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configDiffusionListParAud', {
			url: "/diffusionListParAudConfig",
	    	templateUrl: "assets/tpl/apps/diffusionListParAud/diffusionListParAudConfig.html",
			controller: "DiffusionListParAudConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'DiffusionListParAud'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "DiffusionListParAud", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configDiffusionMessage', {
			url: "/diffusionMessageConfig",
	    	templateUrl: "assets/tpl/apps/diffusionMessage/diffusionMessageConfig.html",
			controller: "DiffusionMessageConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'DiffusionMessage'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "DiffusionMessage", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configEdmChl', {
			url: "/edmChlConfig",
	    	templateUrl: "assets/tpl/apps/edmChl/edmChlConfig.html",
			controller: "EdmChlConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'EdmChl'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "EdmChl", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configEdmExeLog', {
			url: "/edmExeLogConfig",
	    	templateUrl: "assets/tpl/apps/edmExeLog/edmExeLogConfig.html",
			controller: "EdmExeLogConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'EdmExeLog'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "EdmExeLog", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configEdmJobReqLog', {
			url: "/edmJobReqLogConfig",
	    	templateUrl: "assets/tpl/apps/edmJobReqLog/edmJobReqLogConfig.html",
			controller: "EdmJobReqLogConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'EdmJobReqLog'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "EdmJobReqLog", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configEdmSecurity', {
			url: "/edmSecurityConfig",
	    	templateUrl: "assets/tpl/apps/edmSecurity/edmSecurityConfig.html",
			controller: "EdmSecurityConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'EdmSecurity'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "EdmSecurity", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configEdmSvr', {
			url: "/edmSvrConfig",
	    	templateUrl: "assets/tpl/apps/edmSvr/edmSvrConfig.html",
			controller: "EdmSvrConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'EdmSvr'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "EdmSvr", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configErr', {
			url: "/errConfig",
	    	templateUrl: "assets/tpl/apps/err/errConfig.html",
			controller: "ErrConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Err'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Err", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configErrOcc', {
			url: "/errOccConfig",
	    	templateUrl: "assets/tpl/apps/errOcc/errOccConfig.html",
			controller: "ErrOccConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'ErrOcc'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "ErrOcc", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configErrOccDfuSta', {
			url: "/errOccDfuStaConfig",
	    	templateUrl: "assets/tpl/apps/errOccDfuSta/errOccDfuStaConfig.html",
			controller: "ErrOccDfuStaConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'ErrOccDfuSta'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "ErrOccDfuSta", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configErrTrg', {
			url: "/errTrgConfig",
	    	templateUrl: "assets/tpl/apps/errTrg/errTrgConfig.html",
			controller: "ErrTrgConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'ErrTrg'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "ErrTrg", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configFaxAdd', {
			url: "/faxAddConfig",
	    	templateUrl: "assets/tpl/apps/faxAdd/faxAddConfig.html",
			controller: "FaxAddConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'FaxAdd'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "FaxAdd", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configFaxChl', {
			url: "/faxChlConfig",
	    	templateUrl: "assets/tpl/apps/faxChl/faxChlConfig.html",
			controller: "FaxChlConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'FaxChl'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "FaxChl", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configFie', {
			url: "/fieConfig",
	    	templateUrl: "assets/tpl/apps/fie/fieConfig.html",
			controller: "FieConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Fie'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Fie", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configFieLnk', {
			url: "/fieLnkConfig",
	    	templateUrl: "assets/tpl/apps/fieLnk/fieLnkConfig.html",
			controller: "FieLnkConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'FieLnk'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "FieLnk", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configFiePar', {
			url: "/fieParConfig",
	    	templateUrl: "assets/tpl/apps/fiePar/fieParConfig.html",
			controller: "FieParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'FiePar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "FiePar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configFileDocuments', {
			url: "/fileDocumentsConfig",
	    	templateUrl: "assets/tpl/apps/fileDocuments/fileDocumentsConfig.html",
			controller: "FileDocumentsConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'FileDocuments'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "FileDocuments", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configFtpChl', {
			url: "/ftpChlConfig",
	    	templateUrl: "assets/tpl/apps/ftpChl/ftpChlConfig.html",
			controller: "FtpChlConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'FtpChl'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "FtpChl", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configFulMqRptReq', {
			url: "/fulMqRptReqConfig",
	    	templateUrl: "assets/tpl/apps/fulMqRptReq/fulMqRptReqConfig.html",
			controller: "FulMqRptReqConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'FulMqRptReq'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "FulMqRptReq", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configGloPar', {
			url: "/gloParConfig",
	    	templateUrl: "assets/tpl/apps/gloPar/gloParConfig.html",
			controller: "GloParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'GloPar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "GloPar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configInfoRoute', {
			url: "/infoRouteConfig",
	    	templateUrl: "assets/tpl/apps/infoRoute/infoRouteConfig.html",
			controller: "InfoRouteConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'InfoRoute'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "InfoRoute", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configInlGrp', {
			url: "/inlGrpConfig",
	    	templateUrl: "assets/tpl/apps/inlGrp/inlGrpConfig.html",
			controller: "InlGrpConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'InlGrp'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "InlGrp", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configInlUsr', {
			url: "/inlUsrConfig",
	    	templateUrl: "assets/tpl/apps/inlUsr/inlUsrConfig.html",
			controller: "InlUsrConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'InlUsr'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "InlUsr", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configInlUsrGrpLnk', {
			url: "/inlUsrGrpLnkConfig",
	    	templateUrl: "assets/tpl/apps/inlUsrGrpLnk/inlUsrGrpLnkConfig.html",
			controller: "InlUsrGrpLnkConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'InlUsrGrpLnk'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "InlUsrGrpLnk", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configJob', {
			url: "/jobConfig",
	    	templateUrl: "assets/tpl/apps/job/jobConfig.html",
			controller: "JobConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Job'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Job", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configJobPar', {
			url: "/jobParConfig",
	    	templateUrl: "assets/tpl/apps/jobPar/jobParConfig.html",
			controller: "JobParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'JobPar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "JobPar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configJobParVal', {
			url: "/jobParValConfig",
	    	templateUrl: "assets/tpl/apps/jobParVal/jobParValConfig.html",
			controller: "JobParValConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'JobParVal'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "JobParVal", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configLogMalDfuLst', {
			url: "/logMalDfuLstConfig",
	    	templateUrl: "assets/tpl/apps/logMalDfuLst/logMalDfuLstConfig.html",
			controller: "LogMalDfuLstConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'LogMalDfuLst'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "LogMalDfuLst", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configLogMalErrCde', {
			url: "/logMalErrCdeConfig",
	    	templateUrl: "assets/tpl/apps/logMalErrCde/logMalErrCdeConfig.html",
			controller: "LogMalErrCdeConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'LogMalErrCde'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "LogMalErrCde", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configLogPar', {
			url: "/logParConfig",
	    	templateUrl: "assets/tpl/apps/logPar/logParConfig.html",
			controller: "LogParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'LogPar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "LogPar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configLogTivMap', {
			url: "/logTivMapConfig",
	    	templateUrl: "assets/tpl/apps/logTivMap/logTivMapConfig.html",
			controller: "LogTivMapConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'LogTivMap'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "LogTivMap", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configMalAdd', {
			url: "/malAddConfig",
	    	templateUrl: "assets/tpl/apps/malAdd/malAddConfig.html",
			controller: "MalAddConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'MalAdd'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "MalAdd", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configMalChl', {
			url: "/malChlConfig",
	    	templateUrl: "assets/tpl/apps/malChl/malChlConfig.html",
			controller: "MalChlConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'MalChl'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "MalChl", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configMalSvr', {
			url: "/malSvrConfig",
	    	templateUrl: "assets/tpl/apps/malSvr/malSvrConfig.html",
			controller: "MalSvrConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'MalSvr'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "MalSvr", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configParCat', {
			url: "/parCatConfig",
	    	templateUrl: "assets/tpl/apps/parCat/parCatConfig.html",
			controller: "ParCatConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'ParCat'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "ParCat", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configPlanTable', {
			url: "/planTableConfig",
	    	templateUrl: "assets/tpl/apps/planTable/planTableConfig.html",
			controller: "PlanTableConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'PlanTable'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "PlanTable", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configRecipients', {
			url: "/recipientsConfig",
	    	templateUrl: "assets/tpl/apps/recipients/recipientsConfig.html",
			controller: "RecipientsConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Recipients'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Recipients", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configRpt', {
			url: "/rptConfig",
	    	templateUrl: "assets/tpl/apps/rpt/rptConfig.html",
			controller: "RptConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Rpt'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Rpt", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configRptSpnLnk', {
			url: "/rptSpnLnkConfig",
	    	templateUrl: "assets/tpl/apps/rptSpnLnk/rptSpnLnkConfig.html",
			controller: "RptSpnLnkConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'RptSpnLnk'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "RptSpnLnk", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configScdJob', {
			url: "/scdJobConfig",
	    	templateUrl: "assets/tpl/apps/scdJob/scdJobConfig.html",
			controller: "ScdJobConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'ScdJob'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "ScdJob", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configScdJobLog', {
			url: "/scdJobLogConfig",
	    	templateUrl: "assets/tpl/apps/scdJobLog/scdJobLogConfig.html",
			controller: "ScdJobLogConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'ScdJobLog'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "ScdJobLog", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configScdJobLogPar', {
			url: "/scdJobLogParConfig",
	    	templateUrl: "assets/tpl/apps/scdJobLogPar/scdJobLogParConfig.html",
			controller: "ScdJobLogParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'ScdJobLogPar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "ScdJobLogPar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configScdJobPar', {
			url: "/scdJobParConfig",
	    	templateUrl: "assets/tpl/apps/scdJobPar/scdJobParConfig.html",
			controller: "ScdJobParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'ScdJobPar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "ScdJobPar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configScdTrgPar', {
			url: "/scdTrgParConfig",
	    	templateUrl: "assets/tpl/apps/scdTrgPar/scdTrgParConfig.html",
			controller: "ScdTrgParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'ScdTrgPar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "ScdTrgPar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configScr', {
			url: "/scrConfig",
	    	templateUrl: "assets/tpl/apps/scr/scrConfig.html",
			controller: "ScrConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Scr'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Scr", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configSeqNme', {
			url: "/seqNmeConfig",
	    	templateUrl: "assets/tpl/apps/seqNme/seqNmeConfig.html",
			controller: "SeqNmeConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'SeqNme'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "SeqNme", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configSpn', {
			url: "/spnConfig",
	    	templateUrl: "assets/tpl/apps/spn/spnConfig.html",
			controller: "SpnConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Spn'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Spn", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configStdFieNbr', {
			url: "/stdFieNbrConfig",
	    	templateUrl: "assets/tpl/apps/stdFieNbr/stdFieNbrConfig.html",
			controller: "StdFieNbrConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'StdFieNbr'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "StdFieNbr", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configSwiftArchiver', {
			url: "/swiftArchiverConfig",
	    	templateUrl: "assets/tpl/apps/swiftArchiver/swiftArchiverConfig.html",
			controller: "SwiftArchiverConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'SwiftArchiver'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "SwiftArchiver", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configTmpMsgRpy', {
			url: "/tmpMsgRpyConfig",
	    	templateUrl: "assets/tpl/apps/tmpMsgRpy/tmpMsgRpyConfig.html",
			controller: "TmpMsgRpyConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'TmpMsgRpy'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "TmpMsgRpy", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configTopCal', {
			url: "/topCalConfig",
	    	templateUrl: "assets/tpl/apps/topCal/topCalConfig.html",
			controller: "TopCalConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'TopCal'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "TopCal", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configTrfPar', {
			url: "/trfParConfig",
	    	templateUrl: "assets/tpl/apps/trfPar/trfParConfig.html",
			controller: "TrfParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'TrfPar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "TrfPar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configUploads', {
			url: "/uploadsConfig",
	    	templateUrl: "assets/tpl/apps/uploads/uploadsConfig.html",
			controller: "UploadsConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Uploads'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Uploads", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsDiffusion', {
			url: "/vbsDiffusionConfig",
	    	templateUrl: "assets/tpl/apps/vbsDiffusion/vbsDiffusionConfig.html",
			controller: "VbsDiffusionConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsDiffusion'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsDiffusion", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsDiffusionAvant2015', {
			url: "/vbsDiffusionAvant2015Config",
	    	templateUrl: "assets/tpl/apps/vbsDiffusionAvant2015/vbsDiffusionAvant2015Config.html",
			controller: "VbsDiffusionAvant2015ConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsDiffusionAvant2015'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsDiffusionAvant2015", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlow', {
			url: "/vbsFlowConfig",
	    	templateUrl: "assets/tpl/apps/vbsFlow/vbsFlowConfig.html",
			controller: "VbsFlowConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlow'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlow", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowAvant2015', {
			url: "/vbsFlowAvant2015Config",
	    	templateUrl: "assets/tpl/apps/vbsFlowAvant2015/vbsFlowAvant2015Config.html",
			controller: "VbsFlowAvant2015ConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowAvant2015'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowAvant2015", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnit', {
			url: "/vbsFlowUnitConfig",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnit/vbsFlowUnitConfig.html",
			controller: "VbsFlowUnitConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnit'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnit", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnitAvant2015', {
			url: "/vbsFlowUnitAvant2015Config",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitAvant2015/vbsFlowUnitAvant2015Config.html",
			controller: "VbsFlowUnitAvant2015ConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnitAvant2015'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnitAvant2015", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnitDiffusion', {
			url: "/vbsFlowUnitDiffusionConfig",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusion/vbsFlowUnitDiffusionConfig.html",
			controller: "VbsFlowUnitDiffusionConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnitDiffusion'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnitDiffusion", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnitDiffusionA2015', {
			url: "/vbsFlowUnitDiffusionA2015Config",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitDiffusionA2015/vbsFlowUnitDiffusionA2015Config.html",
			controller: "VbsFlowUnitDiffusionA2015ConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnitDiffusionA2015'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnitDiffusionA2015", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnitMedia', {
			url: "/vbsFlowUnitMediaConfig",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMedia/vbsFlowUnitMediaConfig.html",
			controller: "VbsFlowUnitMediaConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnitMedia'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnitMedia", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnitMediaAvant2015', {
			url: "/vbsFlowUnitMediaAvant2015Config",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitMediaAvant2015/vbsFlowUnitMediaAvant2015Config.html",
			controller: "VbsFlowUnitMediaAvant2015ConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnitMediaAvant2015'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnitMediaAvant2015", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnitSubFnd', {
			url: "/vbsFlowUnitSubFndConfig",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFnd/vbsFlowUnitSubFndConfig.html",
			controller: "VbsFlowUnitSubFndConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnitSubFnd'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnitSubFnd", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnitSubFndA2015', {
			url: "/vbsFlowUnitSubFndA2015Config",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitSubFndA2015/vbsFlowUnitSubFndA2015Config.html",
			controller: "VbsFlowUnitSubFndA2015ConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnitSubFndA2015'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnitSubFndA2015", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnitTrans', {
			url: "/vbsFlowUnitTransConfig",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTrans/vbsFlowUnitTransConfig.html",
			controller: "VbsFlowUnitTransConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnitTrans'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnitTrans", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsFlowUnitTransAvant2015', {
			url: "/vbsFlowUnitTransAvant2015Config",
	    	templateUrl: "assets/tpl/apps/vbsFlowUnitTransAvant2015/vbsFlowUnitTransAvant2015Config.html",
			controller: "VbsFlowUnitTransAvant2015ConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsFlowUnitTransAvant2015'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsFlowUnitTransAvant2015", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsStatus', {
			url: "/vbsStatusConfig",
	    	templateUrl: "assets/tpl/apps/vbsStatus/vbsStatusConfig.html",
			controller: "VbsStatusConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsStatus'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsStatus", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configVbsStatusAvant2015', {
			url: "/vbsStatusAvant2015Config",
	    	templateUrl: "assets/tpl/apps/vbsStatusAvant2015/vbsStatusAvant2015Config.html",
			controller: "VbsStatusAvant2015ConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'VbsStatusAvant2015'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "VbsStatusAvant2015", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configWrkSpnDfu', {
			url: "/wrkSpnDfuConfig",
	    	templateUrl: "assets/tpl/apps/wrkSpnDfu/wrkSpnDfuConfig.html",
			controller: "WrkSpnDfuConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'WrkSpnDfu'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "WrkSpnDfu", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configWrkSpnFul', {
			url: "/wrkSpnFulConfig",
	    	templateUrl: "assets/tpl/apps/wrkSpnFul/wrkSpnFulConfig.html",
			controller: "WrkSpnFulConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'WrkSpnFul'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "WrkSpnFul", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configXdpPar', {
			url: "/xdpParConfig",
	    	templateUrl: "assets/tpl/apps/xdpPar/xdpParConfig.html",
			controller: "XdpParConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'XdpPar'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "XdpPar", "value": "{ \"id\": true, \"val\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
});