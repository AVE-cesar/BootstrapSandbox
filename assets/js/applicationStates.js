//
// Source code generated by Celerio, a Jaxio product.
// Documentation: http://www.jaxio.com/documentation/celerio/
// Follow us on twitter: @jaxiosoft
// Need commercial support ? Contact us: info@jaxio.com
// Template pack-custom:angularjs/assets/js/applicationStates.p.vm.js
//



app.config(function($stateProvider, $urlRouterProvider) {
	//
	// For any unmatched url, redirect to /dashboard
	//$urlRouterProvider.otherwise("/dashboard");
	//
  
  /* entities states */
  /* to go to books search screen */
  $stateProvider
        .state('book', {
	    	url: "/book",
			resolve: {
				config : function() {
      				return {"domain": "SCREEN_CONFIG", "key": "Book", "value": "{ \"id\": true, \"title\": true, \"description\": true, \"publicationDate\": true, \"authorId\": true, \"price\": true, \"barcodeid\": true}"};
    			},
				data : function() {
					return [{id: "1", title: "Java", description: "cool"},{id: "2", title: "C++", description: "cool"}];
				}
				/*,
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					log.info("Dans resolve de book");
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Book'}).$promise.then (function (result) {
						if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Book", "value": "{ \"id\": true, \"title\": true, \"description\": true, \"publicationDate\": true, \"authorId\": true, \"price\": true, \"barcodeid\": true}"});
						} else {
							return result;
						}
						});
                    }]*/
				},
			views: {
            	"searchView": {templateUrl: "assets/tpl/apps/book/bookSearch.html",
					controller: "BookController"},
				"mainView": {templateUrl: "assets/tpl/apps/book/book.html",
					controller: "BookController"},
				"footerView": {templateUrl: "assets/tpl/commons/footer.html"}
				}
            })	            
     
        /* to go in Edit mode on a book entity */
		.state('editBook', {
			url: "/book/{id}",
			views: {
				"mainView": {
					templateUrl: "assets/tpl/apps/book/bookEdit.html",
					controller: "BookEditController"
					},
				"footerView": {templateUrl: "assets/tpl/commons/footer.html"}
				},
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'BookRestService', '$log', function($stateParams, BookRestService, log) {
					return BookRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
		})   
		
		/* to go in read only mode on a book entity */
		.state('viewBook', {
			url: "/book/view/{id}",	    			
			views: {
				"mainView": {
					templateUrl: "assets/tpl/apps/book/bookEdit.html",
					controller: "BookEditController"
					},
				"footerView": {templateUrl: "assets/tpl/commons/footer.html"}
				},
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'BookRestService', '$log', function($stateParams, BookRestService, log) {
					return BookRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
		});
  
  /* common states */
  $stateProvider
		.state('home', {
            url: "/",
            views: {
				"mainView": {templateUrl: "assets/tpl/commons/home.html"},
				"footerView": {templateUrl: "assets/tpl/commons/footer.html"}
				}
            })
		.state('form', {
            url: "/form",
            views: {
				"mainView": {templateUrl: "assets/tpl/commons/form.html"},
				"footerView": {templateUrl: "assets/tpl/commons/footer.html"}
				}
            })
		.state('table', {
            url: "/table",
            views: {
            	"searchView": {templateUrl: "assets/tpl/commons/search.html",
							controller: "tableController"},
				"mainView": {templateUrl: "assets/tpl/commons/table.html",
							controller: "tableController"},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				},
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				data : function() {
      				return {email: 'cool'};
    			},
				item : ['$stateParams', 'BookRestService', '$log', function($stateParams, BookRestService, log) {
					log.info("cool:");
					var instance = {lastname: 'AVE', firstname: 'bertrand', email: 'toto@gmail.com'};
					log.info("objet: " + instance.lastname);
					return instance;
                    }]
				}
			}) /* state end*/
        .state('testAlert', {
            url: "/testAlert",
            views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/testAlert.html",
					controller: "TestAlertController"},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
            })
        .state('testIcon', {
            url: "/testIcon",
            views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/testIcon.html"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
            })
		.state('testAside', {
            url: "/testAside",
            views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/testAside.html",
					controller: "TestAsideController"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
            })
		.state('testUpload', {
            url: "/testUpload",
            views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/testUpload.html",
					controller: "TestUploadController"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
            })
		.state('modalWizard', {
            url: "/modalWizard",
            views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/modalWizard.html"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
            })
		.state('searchDetail', {
            url: "/searchDetail",
            views: {
				"searchView": {
					templateUrl: "assets/tpl/commons/searchDetailsearch.html",
					controller: "SearchDetailController"
				},
				"mainView": {
					templateUrl: "assets/tpl/commons/searchDetailMain.html",
					controller: "SearchDetailController"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
            })
		.state('searchDetail.load', {
            url: "/searchDetailload",
            views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/searchDetailMain2.html",
					controller: "SearchDetailController"
				}
				}
            });
 
 
	// Now set up the states
	$stateProvider
    	.state('dashboard', {
      		url: "/dashboard",
			views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/dashboard.html"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
	});
	
	$stateProvider
    	.state('settings', {
      		url: "/settings",
			views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/settings.html"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
    });

    $stateProvider
    	.state('login', {
      		url: "/login",
			views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/login.html",
					controller : "LoginController"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				},
			resolve: {
				credential : function() {
      				return {"login": "admin", "password": "admin"};
    			}
			}
    });
    
    $stateProvider
    	.state('logout', {
      		url: "/logout",
			views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/logout.html"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
    });
    
    $stateProvider
    	.state('logLevels', {
      		url: "/logLevels",
			views: {
				"mainView": {
					templateUrl: "assets/tpl/commons/logLevels.html"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
    });
    
    $stateProvider
    	.state('translation', {
      		url: "/translation",
			views: {
				"mainView": {
					templateUrl: "assets/tpl/apps/admin/translation.html"
				},
				"footerView": {templateUrl: "assets/tpl/commons/emptyFooter.html"}
				}
    });

});